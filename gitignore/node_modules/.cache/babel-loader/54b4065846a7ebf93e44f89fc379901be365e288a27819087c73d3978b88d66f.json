{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\project (10)\\\\src\\\\components\\\\PersonnelManagementPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport PersonnelEmployeeRegistrationForm from './PersonnelManagement/PersonnelEmployeeRegistrationForm';\nimport PersonnelPayslipManagementForm from './PersonnelManagement/PersonnelPayslipManagementForm';\nimport PersonnelThirdPartyPaymentForm from './PersonnelManagement/PersonnelThirdPartyPaymentForm';\nimport PersonnelTaskAssignmentForm from './PersonnelManagement/PersonnelTaskAssignmentForm';\nimport PersonnelTaskHistoryTable from './PersonnelManagement/PersonnelTaskHistoryTable';\nimport PersonnelPayslipHistoryTable from './PersonnelManagement/PersonnelPayslipHistoryTable';\nimport PersonnelThirdPartyPaymentHistoryTable from './PersonnelManagement/PersonnelThirdPartyPaymentHistoryTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonnelManagementPage = ({\n  employees,\n  tasks,\n  onAddEmployee,\n  onSendPayslip,\n  onDeletePayslip,\n  onAssignTask,\n  onDeleteTask,\n  thirdPartyPayments,\n  onAddThirdPartyPayment,\n  onDeleteThirdPartyPayment,\n  payslips,\n  currentUser,\n  animals,\n  logoUrl\n}) => {\n  _s();\n  const [employeeData, setEmployeeData] = useState({\n    name: '',\n    email: '',\n    position: '',\n    schedule: '',\n    salary: ''\n  });\n  const [payrollData, setPayrollData] = useState({\n    employeeId: '',\n    grossAmount: '',\n    bonuses: '',\n    deductions: '',\n    observations: '',\n    paymentDate: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: ''\n  });\n  const [thirdPartyPaymentData, setThirdPartyPaymentData] = useState({\n    personName: '',\n    description: '',\n    amount: '',\n    date: new Date().toISOString().split('T')[0],\n    appliesTo: 'general',\n    // Default\n    targetAnimalId: '' // Default\n  });\n  const [taskData, setTaskData] = useState({\n    employeeId: '',\n    taskType: '',\n    description: '',\n    toolsUsed: '',\n    reason: '',\n    status: 'pendiente'\n  });\n  const [showPayslipHistory, setShowPayslipHistory] = useState(false);\n  const handleEmployeeChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData({\n      ...employeeData,\n      [name]: value\n    });\n  };\n  const handlePayrollChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPayrollData({\n      ...payrollData,\n      [name]: value\n    });\n  };\n  const handleThirdPartyPaymentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setThirdPartyPaymentData({\n      ...thirdPartyPaymentData,\n      [name]: value\n    });\n  };\n  const handleTaskChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskData({\n      ...taskData,\n      [name]: value\n    });\n  };\n  const handleAddEmployeeAction = () => {\n    const newId = `EMP-${Date.now().toString().slice(-5)}`;\n    onAddEmployee({\n      ...employeeData,\n      id: newId\n    });\n    alert(`Empleado ${employeeData.name} registrado.`);\n    setEmployeeData({\n      name: '',\n      email: '',\n      position: '',\n      schedule: '',\n      salary: ''\n    });\n  };\n  const calculateNetSalary = () => {\n    const gross = parseFloat(payrollData.grossAmount) || 0;\n    const bonuses = parseFloat(payrollData.bonuses) || 0;\n    const deductions = parseFloat(payrollData.deductions) || 0;\n    return (gross + bonuses - deductions).toFixed(2);\n  };\n  const handleSendPayslipAction = () => {\n    if (!payrollData.employeeId || !payrollData.grossAmount || !payrollData.paymentDate || !payrollData.startDate || !payrollData.endDate) {\n      alert('Por favor, completa todos los campos obligatorios de la ficha de pago.');\n      return;\n    }\n    const netSalary = calculateNetSalary();\n    onSendPayslip(payrollData.employeeId, {\n      ...payrollData,\n      netSalary\n    });\n    alert(`Ficha de pago para ${payrollData.employeeId} enviada. Salario Neto: $${netSalary}`);\n    setPayrollData({\n      employeeId: '',\n      grossAmount: '',\n      bonuses: '',\n      deductions: '',\n      observations: '',\n      paymentDate: new Date().toISOString().split('T')[0],\n      startDate: '',\n      endDate: ''\n    });\n  };\n  const handleAddThirdPartyPaymentAction = data => {\n    // Recibe data completa\n    if (!data.personName || !data.amount || !data.date) {\n      alert('Por favor, completa todos los campos obligatorios del pago a tercero.');\n      return;\n    }\n    onAddThirdPartyPayment(data); // Pasa la data completa\n    alert(`Pago a ${data.personName} registrado.`);\n    setThirdPartyPaymentData({\n      personName: '',\n      description: '',\n      amount: '',\n      date: new Date().toISOString().split('T')[0],\n      appliesTo: 'general',\n      targetAnimalId: ''\n    });\n  };\n  const handleAssignTaskAction = () => {\n    onAssignTask(taskData.employeeId, taskData);\n    alert(`Tarea asignada a ${taskData.employeeId}.`);\n    setTaskData({\n      employeeId: '',\n      taskType: '',\n      description: '',\n      toolsUsed: '',\n      reason: '',\n      status: 'pendiente'\n    });\n  };\n\n  // --- Función para generar PDF de Ficha de Pago o Asignación de Tarea ---\n  const handlegeneratePdf = (type, data) => {\n    const farmName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.farmName) || 'Mi Finca Ganadera';\n    const adminName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fullName) || 'Administrador';\n    const defaultLogo = 'https://via.placeholder.com/70x70?text=LOGO'; // Default logo if none uploaded\n\n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm';\n    tempDiv.style.padding = '15mm';\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.color = '#333';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n    tempDiv.style.backgroundColor = '#fff';\n    let contentHTML = '';\n    if (type === 'Ficha de Pago') {\n      const employee = employees.find(emp => emp.id === data.employeeId);\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Ficha de Pago Oficial</p>\n            </div>\n          </div>\n\n          <!-- Employee and Payslip Details -->\n          <div style=\"padding: 30px;\">\n            <div style=\"display: flex; justify-content: space-between; margin-bottom: 25px; padding-bottom: 15px; border-bottom: 1px solid #f0f0f0;\">\n              <div>\n                <h2 style=\"font-size: 16pt; margin: 0 0 10px 0; color: #333;\">Detalles del Empleado</h2>\n                <p style=\"margin: 5px 0;\"><strong>Nombre:</strong> ${(employee === null || employee === void 0 ? void 0 : employee.name) || 'N/A'}</p>\n                <p style=\"margin: 5px 0;\"><strong>Correo:</strong> ${(employee === null || employee === void 0 ? void 0 : employee.email) || 'N/A'}</p>\n                <p style=\"margin: 5px 0;\"><strong>Cargo:</strong> ${(employee === null || employee === void 0 ? void 0 : employee.position) || 'N/A'}</p>\n              </div>\n              <div style=\"text-align: right;\">\n                <h2 style=\"font-size: 16pt; margin: 0 0 10px 0; color: #333;\">Información de la Ficha</h2>\n                <p style=\"margin: 5px 0;\"><strong>ID Ficha:</strong> <span style=\"font-weight: bold; color: #007bff;\">${data.id || 'N/A'}</span></p>\n                <p style=\"margin: 5px 0;\"><strong>Fecha de Emisión:</strong> ${data.paymentDate}</p>\n                <p style=\"margin: 5px 0;\"><strong>Período:</strong> ${data.startDate} al ${data.endDate}</p>\n              </div>\n            </div>\n\n            <!-- Payment Breakdown Table -->\n            <h3 style=\"font-size: 18pt; margin: 0 0 15px 0; color: #333; text-align: center;\">Desglose de Pago</h3>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <thead>\n                <tr style=\"background-color: #f5f5f5;\">\n                  <th style=\"padding: 12px 15px; border: 1px solid #e0e0e0; text-align: left; font-weight: bold; color: #555;\">Concepto</th>\n                  <th style=\"padding: 12px 15px; border: 1px solid #e0e0e0; text-align: right; font-weight: bold; color: #555;\">Monto</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Monto Bruto</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">$${parseFloat(data.grossAmount || 0).toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Bonificaciones</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">$${parseFloat(data.bonuses || 0).toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Deducciones</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">-$${parseFloat(data.deductions || 0).toFixed(2)}</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <!-- Net Amount Box -->\n            <div style=\"background-color: #e6f7ff; border: 1px solid #91d5ff; border-radius: 8px; padding: 20px; text-align: center; margin-bottom: 30px;\">\n              <p style=\"font-size: 16pt; margin: 0 0 10px 0; color: #0056b3;\">Total Neto a Pagar</p>\n              <p style=\"font-size: 32pt; font-weight: bold; color: #007bff; margin: 0;\">$${parseFloat(data.netSalary || 0).toFixed(2)}</p>\n            </div>\n\n            <p style=\"margin: 0 0 20px 0; color: #555;\"><strong>Observaciones:</strong> ${data.observations || 'N/A'}</p>\n\n            <!-- Signature/Approval Area -->\n            <div style=\"display: flex; justify-content: space-around; margin-top: 50px; text-align: center;\">\n              <div>\n                <p style=\"border-top: 1px solid #ccc; padding-top: 10px; margin: 0;\">Firma del Empleado</p>\n              </div>\n              <div>\n                <p style=\"border-top: 1px solid #ccc; padding-top: 10px; margin: 0;\">Firma del Administrador</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    } else if (type === 'Asignación de Tarea') {\n      const employee = employees.find(emp => emp.id === data.employeeId);\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Asignación de Tarea</p>\n            </div>\n          </div>\n\n          <!-- Task Details -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"font-size: 18pt; margin: 0 0 20px 0; color: #333; text-align: center;\">Detalles de la Tarea Asignada</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <tbody>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Empleado:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${(employee === null || employee === void 0 ? void 0 : employee.name) || 'N/A'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Tipo de Tarea:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.taskType}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Descripción:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.description}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Herramientas:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.toolsUsed || 'N/A'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Motivo:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.reason || 'No especificado'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Estado:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\"><span style=\"font-weight: bold; color: ${data.status === 'completada' ? '#28a745' : data.status === 'en_progreso' ? '#ffc107' : '#6c757d'};\">${data.status}</span></td></tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    } else if (type === 'Pago a Tercero') {\n      const targetAnimal = data.appliesTo === 'specific' ? animals.find(a => a.id === data.targetAnimalId) : null;\n      const appliesToText = data.appliesTo === 'general' ? 'Todos los animales (General)' : targetAnimal ? `${targetAnimal.name} (${targetAnimal.id})` : 'Animal Específico (No encontrado)';\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Comprobante de Pago a Tercero</p>\n            </div>\n          </div>\n\n          <!-- Payment Details -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"font-size: 18pt; margin: 0 0 20px 0; color: #333; text-align: center;\">Detalles del Pago</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <tbody>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Pagado a:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.personName}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Descripción:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.description || 'No especificado'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Fecha de Pago:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.date}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Aplicado a:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${appliesToText}</td></tr>\n              </tbody>\n            </table>\n\n            <div style=\"background-color: #e6f7ff; border: 1px solid #91d5ff; border-radius: 8px; padding: 20px; text-align: center; margin-bottom: 30px;\">\n              <p style=\"font-size: 16pt; margin: 0 0 10px 0; color: #0056b3;\">Monto Total Pagado</p>\n              <p style=\"font-size: 32pt; font-weight: bold; color: #007bff; margin: 0;\">$${parseFloat(data.amount || 0).toFixed(2)}</p>\n            </div>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    }\n    tempDiv.innerHTML = contentHTML;\n    document.body.appendChild(tempDiv);\n    html2canvas(tempDiv, {\n      scale: 2\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n      pdf.save(`ficha_pago_${data.id || data.employeeId || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n\n  // --- Agrupar fichas de pago por mes ---\n  const groupedPayslips = payslips.reduce((acc, ps) => {\n    const date = new Date(ps.paymentDate);\n    const monthYear = `${date.toLocaleString('es-ES', {\n      month: 'long'\n    })} ${date.getFullYear()}`;\n    if (!acc[monthYear]) {\n      acc[monthYear] = [];\n    }\n    acc[monthYear].push(ps);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Gesti\\xF3n de Personal Integrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelEmployeeRegistrationForm, {\n      employeeData: employeeData,\n      handleEmployeeChange: handleEmployeeChange,\n      handleAddEmployee: handleAddEmployeeAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelPayslipManagementForm, {\n      payrollData: payrollData,\n      handlePayrollChange: handlePayrollChange,\n      handleSendPayslipAction: handleSendPayslipAction,\n      employees: employees,\n      calculateNetSalary: calculateNetSalary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelThirdPartyPaymentForm, {\n      thirdPartyPaymentData: thirdPartyPaymentData,\n      handleThirdPartyPaymentChange: handleThirdPartyPaymentChange,\n      handleAddThirdPartyPaymentAction: handleAddThirdPartyPaymentAction,\n      animals: animals // Pasar la lista de animales\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelTaskAssignmentForm, {\n      taskData: taskData,\n      handleTaskChange: handleTaskChange,\n      handleAssignTaskAction: handleAssignTaskAction,\n      employees: employees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelTaskHistoryTable, {\n      tasks: tasks,\n      employees: employees,\n      onDeleteTask: onDeleteTask,\n      handlegeneratePdf: handlegeneratePdf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelPayslipHistoryTable, {\n      groupedPayslips: groupedPayslips,\n      employees: employees,\n      onDeletePayslip: onDeletePayslip,\n      handlegeneratePdf: handlegeneratePdf,\n      showPayslipHistory: showPayslipHistory,\n      setShowPayslipHistory: setShowPayslipHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonnelThirdPartyPaymentHistoryTable, {\n      thirdPartyPayments: thirdPartyPayments,\n      onDeleteThirdPartyPayment: onDeleteThirdPartyPayment,\n      handlegeneratePdf: handlegeneratePdf,\n      animals: animals // Pasar la lista de animales\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonnelManagementPage, \"1qV6ZkaVmkfd8mM/sBni4HpSkBU=\");\n_c = PersonnelManagementPage;\nexport default PersonnelManagementPage;\nvar _c;\n$RefreshReg$(_c, \"PersonnelManagementPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsPDF","html2canvas","PersonnelEmployeeRegistrationForm","PersonnelPayslipManagementForm","PersonnelThirdPartyPaymentForm","PersonnelTaskAssignmentForm","PersonnelTaskHistoryTable","PersonnelPayslipHistoryTable","PersonnelThirdPartyPaymentHistoryTable","jsxDEV","_jsxDEV","PersonnelManagementPage","employees","tasks","onAddEmployee","onSendPayslip","onDeletePayslip","onAssignTask","onDeleteTask","thirdPartyPayments","onAddThirdPartyPayment","onDeleteThirdPartyPayment","payslips","currentUser","animals","logoUrl","_s","employeeData","setEmployeeData","name","email","position","schedule","salary","payrollData","setPayrollData","employeeId","grossAmount","bonuses","deductions","observations","paymentDate","Date","toISOString","split","startDate","endDate","thirdPartyPaymentData","setThirdPartyPaymentData","personName","description","amount","date","appliesTo","targetAnimalId","taskData","setTaskData","taskType","toolsUsed","reason","status","showPayslipHistory","setShowPayslipHistory","handleEmployeeChange","e","value","target","handlePayrollChange","handleThirdPartyPaymentChange","handleTaskChange","handleAddEmployeeAction","newId","now","toString","slice","id","alert","calculateNetSalary","gross","parseFloat","toFixed","handleSendPayslipAction","netSalary","handleAddThirdPartyPaymentAction","data","handleAssignTaskAction","handlegeneratePdf","type","farmName","adminName","fullName","defaultLogo","tempDiv","document","createElement","style","width","padding","fontFamily","fontSize","color","left","top","backgroundColor","contentHTML","employee","find","emp","toLocaleDateString","targetAnimal","a","appliesToText","innerHTML","body","appendChild","scale","then","canvas","imgData","toDataURL","pdf","imgWidth","imgHeight","height","addImage","save","removeChild","groupedPayslips","reduce","acc","ps","monthYear","toLocaleString","month","getFullYear","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAddEmployee","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/project (10)/src/components/PersonnelManagementPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport PersonnelEmployeeRegistrationForm from './PersonnelManagement/PersonnelEmployeeRegistrationForm';\nimport PersonnelPayslipManagementForm from './PersonnelManagement/PersonnelPayslipManagementForm';\nimport PersonnelThirdPartyPaymentForm from './PersonnelManagement/PersonnelThirdPartyPaymentForm';\nimport PersonnelTaskAssignmentForm from './PersonnelManagement/PersonnelTaskAssignmentForm';\nimport PersonnelTaskHistoryTable from './PersonnelManagement/PersonnelTaskHistoryTable';\nimport PersonnelPayslipHistoryTable from './PersonnelManagement/PersonnelPayslipHistoryTable';\nimport PersonnelThirdPartyPaymentHistoryTable from './PersonnelManagement/PersonnelThirdPartyPaymentHistoryTable';\n\nconst PersonnelManagementPage = ({ employees, tasks, onAddEmployee, onSendPayslip, onDeletePayslip, onAssignTask, onDeleteTask, thirdPartyPayments, onAddThirdPartyPayment, onDeleteThirdPartyPayment, payslips, currentUser, animals, logoUrl }) => {\n  const [employeeData, setEmployeeData] = useState({\n    name: '',\n    email: '',\n    position: '',\n    schedule: '',\n    salary: '',\n  });\n  const [payrollData, setPayrollData] = useState({\n    employeeId: '',\n    grossAmount: '',\n    bonuses: '',\n    deductions: '',\n    observations: '',\n    paymentDate: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: '',\n  });\n  const [thirdPartyPaymentData, setThirdPartyPaymentData] = useState({\n    personName: '',\n    description: '',\n    amount: '',\n    date: new Date().toISOString().split('T')[0],\n    appliesTo: 'general', // Default\n    targetAnimalId: '', // Default\n  });\n  const [taskData, setTaskData] = useState({\n    employeeId: '',\n    taskType: '',\n    description: '',\n    toolsUsed: '',\n    reason: '',\n    status: 'pendiente',\n  });\n\n  const [showPayslipHistory, setShowPayslipHistory] = useState(false);\n\n  const handleEmployeeChange = (e) => {\n    const { name, value } = e.target;\n    setEmployeeData({ ...employeeData, [name]: value });\n  };\n\n  const handlePayrollChange = (e) => {\n    const { name, value } = e.target;\n    setPayrollData({ ...payrollData, [name]: value });\n  };\n\n  const handleThirdPartyPaymentChange = (e) => {\n    const { name, value } = e.target;\n    setThirdPartyPaymentData({ ...thirdPartyPaymentData, [name]: value });\n  };\n\n  const handleTaskChange = (e) => {\n    const { name, value } = e.target;\n    setTaskData({ ...taskData, [name]: value });\n  };\n\n  const handleAddEmployeeAction = () => {\n    const newId = `EMP-${Date.now().toString().slice(-5)}`;\n    onAddEmployee({ ...employeeData, id: newId });\n    alert(`Empleado ${employeeData.name} registrado.`);\n    setEmployeeData({ name: '', email: '', position: '', schedule: '', salary: '' });\n  };\n\n  const calculateNetSalary = () => {\n    const gross = parseFloat(payrollData.grossAmount) || 0;\n    const bonuses = parseFloat(payrollData.bonuses) || 0;\n    const deductions = parseFloat(payrollData.deductions) || 0;\n    return (gross + bonuses - deductions).toFixed(2);\n  };\n\n  const handleSendPayslipAction = () => {\n    if (!payrollData.employeeId || !payrollData.grossAmount || !payrollData.paymentDate || !payrollData.startDate || !payrollData.endDate) {\n      alert('Por favor, completa todos los campos obligatorios de la ficha de pago.');\n      return;\n    }\n    const netSalary = calculateNetSalary();\n    onSendPayslip(payrollData.employeeId, { ...payrollData, netSalary });\n    alert(`Ficha de pago para ${payrollData.employeeId} enviada. Salario Neto: $${netSalary}`);\n    setPayrollData({ \n      employeeId: '', grossAmount: '', bonuses: '', deductions: '', observations: '',\n      paymentDate: new Date().toISOString().split('T')[0],\n      startDate: '', endDate: '',\n    });\n  };\n\n  const handleAddThirdPartyPaymentAction = (data) => { // Recibe data completa\n    if (!data.personName || !data.amount || !data.date) {\n      alert('Por favor, completa todos los campos obligatorios del pago a tercero.');\n      return;\n    }\n    onAddThirdPartyPayment(data); // Pasa la data completa\n    alert(`Pago a ${data.personName} registrado.`);\n    setThirdPartyPaymentData({ personName: '', description: '', amount: '', date: new Date().toISOString().split('T')[0], appliesTo: 'general', targetAnimalId: '' });\n  };\n\n  const handleAssignTaskAction = () => {\n    onAssignTask(taskData.employeeId, taskData);\n    alert(`Tarea asignada a ${taskData.employeeId}.`);\n    setTaskData({ employeeId: '', taskType: '', description: '', toolsUsed: '', reason: '', status: 'pendiente' });\n  };\n\n  // --- Función para generar PDF de Ficha de Pago o Asignación de Tarea ---\n   const handlegeneratePdf = (type, data) => {\n    const farmName = currentUser?.farmName || 'Mi Finca Ganadera';\n    const adminName = currentUser?.fullName || 'Administrador';\n    const defaultLogo = 'https://via.placeholder.com/70x70?text=LOGO'; // Default logo if none uploaded\n\n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm';\n    tempDiv.style.padding = '15mm';\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.color = '#333';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n    tempDiv.style.backgroundColor = '#fff';\n\n    let contentHTML = '';\n\n    if (type === 'Ficha de Pago') {\n      const employee = employees.find(emp => emp.id === data.employeeId);\n\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Ficha de Pago Oficial</p>\n            </div>\n          </div>\n\n          <!-- Employee and Payslip Details -->\n          <div style=\"padding: 30px;\">\n            <div style=\"display: flex; justify-content: space-between; margin-bottom: 25px; padding-bottom: 15px; border-bottom: 1px solid #f0f0f0;\">\n              <div>\n                <h2 style=\"font-size: 16pt; margin: 0 0 10px 0; color: #333;\">Detalles del Empleado</h2>\n                <p style=\"margin: 5px 0;\"><strong>Nombre:</strong> ${employee?.name || 'N/A'}</p>\n                <p style=\"margin: 5px 0;\"><strong>Correo:</strong> ${employee?.email || 'N/A'}</p>\n                <p style=\"margin: 5px 0;\"><strong>Cargo:</strong> ${employee?.position || 'N/A'}</p>\n              </div>\n              <div style=\"text-align: right;\">\n                <h2 style=\"font-size: 16pt; margin: 0 0 10px 0; color: #333;\">Información de la Ficha</h2>\n                <p style=\"margin: 5px 0;\"><strong>ID Ficha:</strong> <span style=\"font-weight: bold; color: #007bff;\">${data.id || 'N/A'}</span></p>\n                <p style=\"margin: 5px 0;\"><strong>Fecha de Emisión:</strong> ${data.paymentDate}</p>\n                <p style=\"margin: 5px 0;\"><strong>Período:</strong> ${data.startDate} al ${data.endDate}</p>\n              </div>\n            </div>\n\n            <!-- Payment Breakdown Table -->\n            <h3 style=\"font-size: 18pt; margin: 0 0 15px 0; color: #333; text-align: center;\">Desglose de Pago</h3>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <thead>\n                <tr style=\"background-color: #f5f5f5;\">\n                  <th style=\"padding: 12px 15px; border: 1px solid #e0e0e0; text-align: left; font-weight: bold; color: #555;\">Concepto</th>\n                  <th style=\"padding: 12px 15px; border: 1px solid #e0e0e0; text-align: right; font-weight: bold; color: #555;\">Monto</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Monto Bruto</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">$${parseFloat(data.grossAmount || 0).toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Bonificaciones</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">$${parseFloat(data.bonuses || 0).toFixed(2)}</td>\n                </tr>\n                <tr>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">Deducciones</td>\n                  <td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; text-align: right;\">-$${parseFloat(data.deductions || 0).toFixed(2)}</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <!-- Net Amount Box -->\n            <div style=\"background-color: #e6f7ff; border: 1px solid #91d5ff; border-radius: 8px; padding: 20px; text-align: center; margin-bottom: 30px;\">\n              <p style=\"font-size: 16pt; margin: 0 0 10px 0; color: #0056b3;\">Total Neto a Pagar</p>\n              <p style=\"font-size: 32pt; font-weight: bold; color: #007bff; margin: 0;\">$${parseFloat(data.netSalary || 0).toFixed(2)}</p>\n            </div>\n\n            <p style=\"margin: 0 0 20px 0; color: #555;\"><strong>Observaciones:</strong> ${data.observations || 'N/A'}</p>\n\n            <!-- Signature/Approval Area -->\n            <div style=\"display: flex; justify-content: space-around; margin-top: 50px; text-align: center;\">\n              <div>\n                <p style=\"border-top: 1px solid #ccc; padding-top: 10px; margin: 0;\">Firma del Empleado</p>\n              </div>\n              <div>\n                <p style=\"border-top: 1px solid #ccc; padding-top: 10px; margin: 0;\">Firma del Administrador</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    } else if (type === 'Asignación de Tarea') {\n      const employee = employees.find(emp => emp.id === data.employeeId);\n\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Asignación de Tarea</p>\n            </div>\n          </div>\n\n          <!-- Task Details -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"font-size: 18pt; margin: 0 0 20px 0; color: #333; text-align: center;\">Detalles de la Tarea Asignada</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <tbody>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Empleado:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${employee?.name || 'N/A'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Tipo de Tarea:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.taskType}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Descripción:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.description}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Herramientas:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.toolsUsed || 'N/A'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Motivo:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.reason || 'No especificado'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Estado:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\"><span style=\"font-weight: bold; color: ${data.status === 'completada' ? '#28a745' : data.status === 'en_progreso' ? '#ffc107' : '#6c757d'};\">${data.status}</span></td></tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    } else if (type === 'Pago a Tercero') {\n      const targetAnimal = data.appliesTo === 'specific' ? animals.find(a => a.id === data.targetAnimalId) : null;\n      const appliesToText = data.appliesTo === 'general' ? 'Todos los animales (General)' : (targetAnimal ? `${targetAnimal.name} (${targetAnimal.id})` : 'Animal Específico (No encontrado)');\n\n      contentHTML = `\n        <div style=\"border: 1px solid #e0e0e0; border-radius: 10px; overflow: hidden; background-color: #ffffff; box-shadow: 0 4px 12px rgba(0,0,0,0.08);\">\n          <!-- Header -->\n          <div style=\"background-color: #2c3e50; color: #ffffff; padding: 25px 30px; display: flex; justify-content: space-between; align-items: center;\">\n            <img src=\"${logoUrl || defaultLogo}\" style=\"width: 70px; height: 70px; border-radius: 50%; object-fit: cover; border: 2px solid #fff;\" alt=\"Logo Finca\">\n            <div style=\"text-align: right;\">\n              <h1 style=\"margin: 0; font-size: 28pt; font-weight: bold; letter-spacing: 1px;\">${farmName}</h1>\n              <p style=\"margin: 5px 0 0 0; font-size: 14pt; opacity: 0.9;\">Comprobante de Pago a Tercero</p>\n            </div>\n          </div>\n\n          <!-- Payment Details -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"font-size: 18pt; margin: 0 0 20px 0; color: #333; text-align: center;\">Detalles del Pago</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 30px;\">\n              <tbody>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Pagado a:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.personName}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Descripción:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.description || 'No especificado'}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Fecha de Pago:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${data.date}</td></tr>\n                <tr><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0; font-weight: bold;\">Aplicado a:</td><td style=\"padding: 10px 15px; border: 1px solid #e0e0e0;\">${appliesToText}</td></tr>\n              </tbody>\n            </table>\n\n            <div style=\"background-color: #e6f7ff; border: 1px solid #91d5ff; border-radius: 8px; padding: 20px; text-align: center; margin-bottom: 30px;\">\n              <p style=\"font-size: 16pt; margin: 0 0 10px 0; color: #0056b3;\">Monto Total Pagado</p>\n              <p style=\"font-size: 32pt; font-weight: bold; color: #007bff; margin: 0;\">$${parseFloat(data.amount || 0).toFixed(2)}</p>\n            </div>\n          </div>\n\n          <!-- Footer -->\n          <div style=\"background-color: #f0f0f0; color: #777; padding: 15px 30px; font-size: 9pt; text-align: center; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n            <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n            <p style=\"margin: 5px 0 0 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">Contacto: info@campointeligente.com</p>\n          </div>\n        </div>\n      `;\n    }\n\n    tempDiv.innerHTML = contentHTML;\n    document.body.appendChild(tempDiv);\n\n    html2canvas(tempDiv, { scale: 2 }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n      pdf.save(`ficha_pago_${data.id || data.employeeId || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n\n  // --- Agrupar fichas de pago por mes ---\n  const groupedPayslips = payslips.reduce((acc, ps) => {\n    const date = new Date(ps.paymentDate);\n    const monthYear = `${date.toLocaleString('es-ES', { month: 'long' })} ${date.getFullYear()}`;\n    if (!acc[monthYear]) {\n      acc[monthYear] = [];\n    }\n    acc[monthYear].push(ps);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h3 className=\"text-xl font-semibold mb-4\">Gestión de Personal Integrada</h3>\n\n      <PersonnelEmployeeRegistrationForm\n        employeeData={employeeData}\n        handleEmployeeChange={handleEmployeeChange}\n        handleAddEmployee={handleAddEmployeeAction}\n      />\n\n      <PersonnelPayslipManagementForm\n        payrollData={payrollData}\n        handlePayrollChange={handlePayrollChange}\n        handleSendPayslipAction={handleSendPayslipAction}\n        employees={employees}\n        calculateNetSalary={calculateNetSalary}\n      />\n\n      <PersonnelThirdPartyPaymentForm\n        thirdPartyPaymentData={thirdPartyPaymentData}\n        handleThirdPartyPaymentChange={handleThirdPartyPaymentChange}\n        handleAddThirdPartyPaymentAction={handleAddThirdPartyPaymentAction}\n        animals={animals} // Pasar la lista de animales\n      />\n\n      <PersonnelTaskAssignmentForm\n        taskData={taskData}\n        handleTaskChange={handleTaskChange}\n        handleAssignTaskAction={handleAssignTaskAction}\n        employees={employees}\n      />\n\n      <PersonnelTaskHistoryTable\n        tasks={tasks}\n        employees={employees}\n        onDeleteTask={onDeleteTask}\n        handlegeneratePdf={handlegeneratePdf}\n      />\n\n      <PersonnelPayslipHistoryTable\n        groupedPayslips={groupedPayslips}\n        employees={employees}\n        onDeletePayslip={onDeletePayslip}\n        handlegeneratePdf={handlegeneratePdf}\n        showPayslipHistory={showPayslipHistory}\n        setShowPayslipHistory={setShowPayslipHistory}\n      />\n\n      <PersonnelThirdPartyPaymentHistoryTable\n        thirdPartyPayments={thirdPartyPayments}\n        onDeleteThirdPartyPayment={onDeleteThirdPartyPayment}\n        handlegeneratePdf={handlegeneratePdf}\n        animals={animals} // Pasar la lista de animales\n      />\n    </div>\n  );\n};\n\nexport default PersonnelManagementPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}