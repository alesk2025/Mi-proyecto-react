{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PersonnelPayslipHistoryTable=_ref=>{let{groupedPayslips,employees,onDeletePayslip,handlegeneratePdf,showPayslipHistory,setShowPayslipHistory}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-lg font-semibold mb-3 mt-8 cursor-pointer flex items-center justify-between bg-gray-100 p-3 rounded-lg shadow-sm\",onClick:()=>setShowPayslipHistory(!showPayslipHistory),children:[\"Historial de Fichas de Pago\",/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 transform transition-transform \".concat(showPayslipHistory?'rotate-180':''),fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M19 9l-7 7-7-7\"})})]}),showPayslipHistory&&/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:Object.keys(groupedPayslips).length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 p-4\",children:\"No hay fichas de pago registradas.\"}):Object.keys(groupedPayslips).sort((a,b)=>{const[monthA,yearA]=a.split(' ');const[monthB,yearB]=b.split(' ');const dateA=new Date(\"\".concat(monthA,\" 1, \").concat(yearA));const dateB=new Date(\"\".concat(monthB,\" 1, \").concat(yearB));return dateB-dateA;}).map(monthYear=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-md font-semibold mb-2 bg-gray-200 p-2 rounded-lg text-gray-700\",children:monthYear}),/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full bg-white text-sm rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 text-gray-700\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"ID Ficha\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"Empleado\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"Monto Neto\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"Per\\xEDodo\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"Fecha Pago\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left font-semibold\",children:\"Acciones\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200\",children:groupedPayslips[monthYear].map(ps=>{var _employees$find;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50 transition-colors\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:ps.id}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:((_employees$find=employees.find(emp=>emp.id===ps.employeeId))===null||_employees$find===void 0?void 0:_employees$find.name)||'N/A'}),/*#__PURE__*/_jsxs(\"td\",{className:\"py-2 px-4\",children:[\"$\",(parseFloat(ps.netSalary)||0).toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{className:\"py-2 px-4\",children:[ps.startDate,\" al \",ps.endDate]}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:ps.paymentDate}),/*#__PURE__*/_jsxs(\"td\",{className:\"py-2 px-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlegeneratePdf('Ficha de Pago',ps),className:\"text-blue-600 hover:text-blue-800 font-medium mr-2 transition-colors\",children:\"Ver PDF\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDeletePayslip(ps.id),className:\"text-red-600 hover:text-red-800 font-medium transition-colors\",children:\"Eliminar\"})]})]},ps.id);})})]})]},monthYear))})]});};export default PersonnelPayslipHistoryTable;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PersonnelPayslipHistoryTable","_ref","groupedPayslips","employees","onDeletePayslip","handlegeneratePdf","showPayslipHistory","setShowPayslipHistory","children","className","onClick","concat","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","Object","keys","length","sort","a","b","monthA","yearA","split","monthB","yearB","dateA","Date","dateB","map","monthYear","ps","_employees$find","id","find","emp","employeeId","name","parseFloat","netSalary","toFixed","startDate","endDate","paymentDate"],"sources":["C:/Users/User/Downloads/project (10)/src/components/PersonnelManagement/PersonnelPayslipHistoryTable.js"],"sourcesContent":["import React from 'react';\n\nconst PersonnelPayslipHistoryTable = ({ groupedPayslips, employees, onDeletePayslip, handlegeneratePdf, showPayslipHistory, setShowPayslipHistory }) => {\n  return (\n    <>\n      <h4 className=\"text-lg font-semibold mb-3 mt-8 cursor-pointer flex items-center justify-between bg-gray-100 p-3 rounded-lg shadow-sm\" onClick={() => setShowPayslipHistory(!showPayslipHistory)}>\n        Historial de Fichas de Pago\n        <svg className={`w-5 h-5 transform transition-transform ${showPayslipHistory ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg>\n      </h4>\n      {showPayslipHistory && (\n        <div className=\"overflow-x-auto\">\n          {Object.keys(groupedPayslips).length === 0 ? (\n            <p className=\"text-gray-600 p-4\">No hay fichas de pago registradas.</p>\n          ) : (\n            Object.keys(groupedPayslips).sort((a, b) => {\n              const [monthA, yearA] = a.split(' ');\n              const [monthB, yearB] = b.split(' ');\n              const dateA = new Date(`${monthA} 1, ${yearA}`);\n              const dateB = new Date(`${monthB} 1, ${yearB}`);\n              return dateB - dateA;\n            }).map(monthYear => (\n              <div key={monthYear} className=\"mb-6\">\n                <h5 className=\"text-md font-semibold mb-2 bg-gray-200 p-2 rounded-lg text-gray-700\">{monthYear}</h5>\n                <table className=\"min-w-full bg-white text-sm rounded-lg shadow-md\">\n                  <thead className=\"bg-gray-100 text-gray-700\">\n                    <tr>\n                      <th className=\"py-2 px-4 text-left font-semibold\">ID Ficha</th>\n                      <th className=\"py-2 px-4 text-left font-semibold\">Empleado</th>\n                      <th className=\"py-2 px-4 text-left font-semibold\">Monto Neto</th>\n                      <th className=\"py-2 px-4 text-left font-semibold\">Per√≠odo</th>\n                      <th className=\"py-2 px-4 text-left font-semibold\">Fecha Pago</th>\n                      <th className=\"py-2 px-4 text-left font-semibold\">Acciones</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {groupedPayslips[monthYear].map(ps => (\n                      <tr key={ps.id} className=\"hover:bg-gray-50 transition-colors\">\n                        <td className=\"py-2 px-4\">{ps.id}</td>\n                        <td className=\"py-2 px-4\">{employees.find(emp => emp.id === ps.employeeId)?.name || 'N/A'}</td>\n                        <td className=\"py-2 px-4\">${(parseFloat(ps.netSalary) || 0).toFixed(2)}</td>\n                        <td className=\"py-2 px-4\">{ps.startDate} al {ps.endDate}</td>\n                        <td className=\"py-2 px-4\">{ps.paymentDate}</td>\n                        <td className=\"py-2 px-4\">\n                          <button\n                            onClick={() => handlegeneratePdf('Ficha de Pago', ps)}\n                            className=\"text-blue-600 hover:text-blue-800 font-medium mr-2 transition-colors\"\n                          >\n                            Ver PDF\n                          </button>\n                          <button\n                            onClick={() => onDeletePayslip(ps.id)}\n                            className=\"text-red-600 hover:text-red-800 font-medium transition-colors\"\n                          >\n                            Eliminar\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PersonnelPayslipHistoryTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}