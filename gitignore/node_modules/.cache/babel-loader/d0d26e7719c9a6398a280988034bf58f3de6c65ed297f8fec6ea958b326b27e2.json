{"ast":null,"code":"// Función para clasificar la edad del animal\nexport const classifyAnimalAge = (fechaNacimiento, sexo) => {\n  if (!fechaNacimiento) return 'N/A';\n  const birthDate = new Date(fechaNacimiento);\n  const today = new Date();\n  let years = today.getFullYear() - birthDate.getFullYear();\n  let months = today.getMonth() - birthDate.getMonth();\n  let days = today.getDate() - birthDate.getDate();\n  if (days < 0) {\n    months--;\n    days += new Date(today.getFullYear(), today.getMonth(), 0).getDate();\n  }\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n  if (years < 1) {\n    if (months < 6) {\n      return sexo === 'macho' ? 'Ternero' : 'Ternera';\n    } else {\n      return sexo === 'macho' ? 'Maute' : 'Mauta';\n    }\n  } else if (years >= 1 && years < 2) {\n    return sexo === 'macho' ? 'Maute' : 'Mauta';\n  } else if (years >= 2 && years < 3) {\n    return sexo === 'macho' ? 'Novillo' : 'Novilla';\n  } else {\n    return sexo === 'macho' ? 'Toro' : 'Vaca';\n  }\n};","map":{"version":3,"names":["classifyAnimalAge","fechaNacimiento","sexo","birthDate","Date","today","years","getFullYear","months","getMonth","days","getDate"],"sources":["C:/Users/User/Downloads/project (10)/src/utils/helpers.js"],"sourcesContent":["// Función para clasificar la edad del animal\nexport const classifyAnimalAge = (fechaNacimiento, sexo) => {\n  if (!fechaNacimiento) return 'N/A';\n\n  const birthDate = new Date(fechaNacimiento);\n  const today = new Date();\n  let years = today.getFullYear() - birthDate.getFullYear();\n  let months = today.getMonth() - birthDate.getMonth();\n  let days = today.getDate() - birthDate.getDate();\n\n  if (days < 0) {\n    months--;\n    days += new Date(today.getFullYear(), today.getMonth(), 0).getDate();\n  }\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n\n  if (years < 1) {\n    if (months < 6) {\n      return sexo === 'macho' ? 'Ternero' : 'Ternera';\n    } else {\n      return sexo === 'macho' ? 'Maute' : 'Mauta';\n    }\n  } else if (years >= 1 && years < 2) {\n    return sexo === 'macho' ? 'Maute' : 'Mauta';\n  } else if (years >= 2 && years < 3) {\n    return sexo === 'macho' ? 'Novillo' : 'Novilla';\n  } else {\n    return sexo === 'macho' ? 'Toro' : 'Vaca';\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,eAAe,EAAEC,IAAI,KAAK;EAC1D,IAAI,CAACD,eAAe,EAAE,OAAO,KAAK;EAElC,MAAME,SAAS,GAAG,IAAIC,IAAI,CAACH,eAAe,CAAC;EAC3C,MAAMI,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;EACxB,IAAIE,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,GAAGJ,SAAS,CAACI,WAAW,CAAC,CAAC;EACzD,IAAIC,MAAM,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,GAAGN,SAAS,CAACM,QAAQ,CAAC,CAAC;EACpD,IAAIC,IAAI,GAAGL,KAAK,CAACM,OAAO,CAAC,CAAC,GAAGR,SAAS,CAACQ,OAAO,CAAC,CAAC;EAEhD,IAAID,IAAI,GAAG,CAAC,EAAE;IACZF,MAAM,EAAE;IACRE,IAAI,IAAI,IAAIN,IAAI,CAACC,KAAK,CAACE,WAAW,CAAC,CAAC,EAAEF,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;EACtE;EACA,IAAIH,MAAM,GAAG,CAAC,EAAE;IACdF,KAAK,EAAE;IACPE,MAAM,IAAI,EAAE;EACd;EAEA,IAAIF,KAAK,GAAG,CAAC,EAAE;IACb,IAAIE,MAAM,GAAG,CAAC,EAAE;MACd,OAAON,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;IACjD,CAAC,MAAM;MACL,OAAOA,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO;IAC7C;EACF,CAAC,MAAM,IAAII,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;IAClC,OAAOJ,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO;EAC7C,CAAC,MAAM,IAAII,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;IAClC,OAAOJ,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;EACjD,CAAC,MAAM;IACL,OAAOA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}