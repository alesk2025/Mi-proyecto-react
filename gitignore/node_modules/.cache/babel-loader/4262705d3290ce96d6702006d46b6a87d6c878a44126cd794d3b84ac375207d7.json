{"ast":null,"code":"import _objectSpread from\"C:/Users/User/Downloads/project (10)/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import AuthLayout from'./components/AuthLayout';import AuthRegisterForm from'./components/AuthRegisterForm';import AuthLoginForm from'./components/AuthLoginForm';import DashboardLayout from'./components/DashboardLayout';import AnimalRegistrationPage from'./components/AnimalRegistrationPage';import SanitaryControlPage from'./components/SanitaryControlPage';import ReproductiveControlPage from'./components/ReproductiveControlPage';import InventoryPage from'./components/InventoryPage';import EconomicManagementPage from'./components/EconomicManagementPage';import PersonnelManagementPage from'./components/PersonnelManagementPage';import SubscriptionPlansPage from'./components/SubscriptionPlansPage';// Importar datos simulados (ahora vacíos para que el usuario los cree)\n// Los datos iniciales se cargarán desde localStorage\nimport{animals as initialAnimals}from'./mock/animals';import{inventoryItems as initialInventoryItems}from'./mock/inventory';import{employees as initialEmployees,mockPayslips as initialPayslips}from'./mock/employees';import{tasks as initialTasks}from'./mock/tasks';import{transactions as initialTransactions}from'./mock/transactions';import{reproductiveRecords as initialsetReproductiveRecords}from'./mock/reproductive';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SUBSCRIPTION_PLANS={\"Gratuito\":{maxAnimals:10,maxEmployees:1,maxInventoryItems:15,price:0,benefits:[\"Registro básico\",\"Reportes limitados\"]},\"Basico\":{maxAnimals:18,maxEmployees:2,maxInventoryItems:25,price:2.99,benefits:[\"Todo lo gratuito\",\"Más animales y empleados\",\"Reportes detallados\"]},\"Standard\":{maxAnimals:28,maxEmployees:5,maxInventoryItems:Infinity,// Productos ilimitados\nprice:6.99,benefits:[\"Todo lo básico\",\"Más capacidad\",\"Productos ilimitados\"]},\"Premium\":{maxAnimals:Infinity,maxEmployees:Infinity,maxInventoryItems:Infinity,price:24.99,benefits:[\"Todo ilimitado\",\"Asesoría empresarial (simulado)\",\"Seguimiento y consultas veterinarias gratis (simulado)\"]}};const App=()=>{const[currentPage,setCurrentPage]=useState('login');const[isLoggedIn,setIsLoggedIn]=useState(false);const[currentUser,setCurrentUser]=useState(null);// Función helper para cargar desde localStorage\nconst loadFromLocalStorage=(key,defaultValue)=>{try{const saved=localStorage.getItem(key);return saved?JSON.parse(saved):defaultValue;}catch(error){console.error(\"Error loading \".concat(key,\" from localStorage:\"),error);return defaultValue;}};// Función helper para guardar en localStorage\nconst saveToLocalStorage=(key,value)=>{try{localStorage.setItem(key,JSON.stringify(value));}catch(error){console.error(\"Error saving \".concat(key,\" to localStorage:\"),error);}};// Estados para los datos de la aplicación, cargados desde localStorage\nconst[animals,setAnimals]=useState(()=>loadFromLocalStorage('animals',initialAnimals));const[inventory,setInventory]=useState(()=>loadFromLocalStorage('inventory',initialInventoryItems));const[reproductiveRecords,setReproductiveRecords]=useState(()=>loadFromLocalStorage('reproductiveRecords',initialsetReproductiveRecords));const[employees,setEmployees]=useState(()=>loadFromLocalStorage('employees',initialEmployees));const[tasks,setTasks]=useState(()=>loadFromLocalStorage('tasks',initialTasks));const[transactions,setTransactions]=useState(()=>loadFromLocalStorage('transactions',initialTransactions));const[payslips,setPayslips]=useState(()=>loadFromLocalStorage('payslips',initialPayslips));const[thirdPartyPayments,setThirdPartyPayments]=useState(()=>loadFromLocalStorage('thirdPartyPayments',[]));// Estado para manejar todos los usuarios registrados\nconst[registeredUsers,setRegisteredUsers]=useState(()=>loadFromLocalStorage('registeredUsers',[]));// --- Efectos para guardar en localStorage cada vez que los estados cambian ---\nuseEffect(()=>{saveToLocalStorage('registeredUsers',registeredUsers);},[registeredUsers]);useEffect(()=>{saveToLocalStorage('animals',animals);},[animals]);useEffect(()=>{saveToLocalStorage('inventory',inventory);},[inventory]);useEffect(()=>{saveToLocalStorage('employees',employees);},[employees]);useEffect(()=>{saveToLocalStorage('tasks',tasks);},[tasks]);useEffect(()=>{saveToLocalStorage('transactions',transactions);},[transactions]);useEffect(()=>{saveToLocalStorage('payslips',payslips);},[payslips]);useEffect(()=>{saveToLocalStorage('thirdPartyPayments',thirdPartyPayments);},[thirdPartyPayments]);useEffect(()=>{saveToLocalStorage('gestacionRecords',reproductiveRecords);},[reproductiveRecords]);// --- Funciones de Control de Límites ---\nconst checkLimit=type=>{if(!currentUser)return false;const plan=SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];if(!plan)return false;switch(type){case'animal':return animals.length<plan.maxAnimals;case'employee':return employees.length<plan.maxEmployees;case'inventoryItem':return inventory.length<plan.maxInventoryItems;default:return false;}};const getRemaining=type=>{if(!currentUser)return 0;const plan=SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];if(!plan)return 0;switch(type){case'animal':return plan.maxAnimals===Infinity?'Ilimitado':plan.maxAnimals-animals.length;case'employee':return plan.maxEmployees===Infinity?'Ilimitado':plan.maxEmployees-employees.length;case'inventoryItem':return plan.maxInventoryItems===Infinity?'Ilimitado':plan.maxInventoryItems-inventory.length;default:return 0;}};// --- Funciones de Manejo de Datos ---\n// Animales\nconst handleRegisterAnimal=newAnimal=>{if(!checkLimit('animal')){alert(\"L\\xEDmite de animales alcanzado para tu plan \".concat(currentUser.subscriptionPlan,\". Actualiza tu suscripci\\xF3n.\"));return;}setAnimals([...animals,newAnimal]);};const handleUpdateAnimalProduction=(animalId,updateData)=>{const updatedAnimal=animals.map(animal=>animal.id===animalId?_objectSpread(_objectSpread({},animal),updateData):animal);setAnimals(updatedAnimal);localStorage.setItem('animals',JSON.stringify(updated));};const handleReproductiveRecordStatus=(id,nuevoEstado)=>{const registros=JSON.parse(localStorage.getItem('gestacionRecords'))||[];const actualizados=registros.map(r=>r.id===id?_objectSpread(_objectSpread({},r),{},{estado:nuevoEstado}):r);localStorage.setItem('gestacionRecords',JSON.stringify(actualizados));};const handleDeletePregnantCow=id=>{setAnimals(prev=>prev.map(animal=>animal.id===id?_objectSpread(_objectSpread({},animal),{},{estadoReproductivo:'',fechaUltimaGestacion:''}):animal));};const handleEditAnimal=updatedAnimal=>{setAnimals(animals.map(animal=>animal.id===updatedAnimal.id?updatedAnimal:animal));};const handleDeleteAnimal=id=>{setAnimals(animals.filter(animal=>animal.id!==id));};// Inventario\nconst handleAddItemToInventory=newItem=>{if(!checkLimit('inventoryItem')){alert(\"L\\xEDmite de productos en inventario alcanzado para tu plan \".concat(currentUser.subscriptionPlan,\". Actualiza tu suscripci\\xF3n.\"));return;}setInventory([...inventory,newItem]);};const handleUpdateInventoryQuantity=(itemId,amountUsed)=>{setInventory(inventory.map(item=>{if(item.id===itemId){const newQuantity=item.quantity-amountUsed;return _objectSpread(_objectSpread({},item),{},{quantity:newQuantity>0?newQuantity:0});}return item;}).filter(item=>item.quantity>0));};const handleDeleteInventoryItem=id=>{setInventory(inventory.filter(item=>item.id!==id));};const handleExportInventory=type=>{alert(\"Exportando inventario a \".concat(type,\" (simulado).\"));};// Transacciones Económicas\nconst handleAddTransaction=newTransaction=>{setTransactions([...transactions,newTransaction]);};const handleDeleteTransaction=id=>{setTransactions(transactions.filter(trx=>trx.id!==id));};// Empleados\nconst handleAddEmployee=newEmployee=>{if(!checkLimit('employee')){alert(\"L\\xEDmite de empleados alcanzado para tu plan \".concat(currentUser.subscriptionPlan,\". Actualiza tu suscripci\\xF3n.\"));return;}setEmployees([...employees,newEmployee]);};const handleSendPayslip=(employeeId,payslipData)=>{const newPayslipId=\"PS-\".concat(Date.now().toString().slice(-5));const netSalaryNum=parseFloat(payslipData.netSalary)||0;setPayslips([...payslips,_objectSpread(_objectSpread({},payslipData),{},{id:newPayslipId,employeeId,netSalary:netSalaryNum})]);alert(\"Ficha de pago para \".concat(employeeId,\" enviada por correo (simulado).\"));};const handleDeletePayslip=id=>{setPayslips(payslips.filter(ps=>ps.id!==id));};const handleAssignTask=(employeeId,taskData)=>{const newTaskId=\"TASK-\".concat(Date.now().toString().slice(-5));setTasks([...tasks,_objectSpread(_objectSpread({},taskData),{},{id:newTaskId,employeeId})]);alert(\"Tarea asignada a \".concat(employeeId,\" (simulado).\"));};const handleDeleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};// Pagos a terceros\nconst handleAddThirdPartyPayment=paymentData=>{const newPaymentId=\"TPP-\".concat(Date.now().toString().slice(-5));const amountNum=parseFloat(paymentData.amount)||0;setThirdPartyPayments([...thirdPartyPayments,_objectSpread(_objectSpread({},paymentData),{},{id:newPaymentId,amount:amountNum})]);alert(\"Pago a tercero \".concat(paymentData.personName,\" registrado.\"));};const handleDeleteThirdPartyPayment=id=>{setThirdPartyPayments(thirdPartyPayments.filter(payment=>payment.id!==id));};// --- Funciones de Navegación y Autenticación ---\nconst handleLoginSuccess=user=>{setIsLoggedIn(true);setCurrentUser(user);setCurrentPage('dashboard');};const handleRegisterUser=userData=>{// Verificar si el email ya existe\nif(registeredUsers.some(u=>u.email===userData.email)){alert('Este correo ya está registrado. Por favor, inicia sesión o usa otro correo.');return false;}const newUser=_objectSpread(_objectSpread({},userData),{},{id:\"USR-\".concat(Date.now().toString().slice(-5)),subscriptionPlan:\"Gratuito\"});setRegisteredUsers([...registeredUsers,newUser]);return true;// Registro exitoso\n};const handleNavigate=page=>{if(page==='logout'){setIsLoggedIn(false);setCurrentUser(null);setCurrentPage('login');}else{setCurrentPage(page);}};const handleUpdateSubscription=planName=>{if(currentUser){const updatedUsers=registeredUsers.map(u=>u.id===currentUser.id?_objectSpread(_objectSpread({},u),{},{subscriptionPlan:planName}):u);setRegisteredUsers(updatedUsers);setCurrentUser(_objectSpread(_objectSpread({},currentUser),{},{subscriptionPlan:planName}));alert(\"Tu plan ha sido actualizado a \".concat(planName,\". (Simulado)\"));setCurrentPage('dashboard');}};// --- Renderizado de Páginas ---\nconst renderPage=()=>{if(!isLoggedIn){return/*#__PURE__*/_jsx(AuthLayout,{children:currentPage==='login'?/*#__PURE__*/_jsx(AuthLoginForm,{onLoginSuccess:handleLoginSuccess,onNavigateToRegister:()=>setCurrentPage('register'),registeredUsers:registeredUsers}):/*#__PURE__*/_jsx(AuthRegisterForm,{onRegisterSuccess:handleRegisterUser,onNavigateToLogin:()=>setCurrentPage('login')})});}else{let content;switch(currentPage){case'animalRegistration':content=/*#__PURE__*/_jsx(AnimalRegistrationPage,{onRegisterAnimal:handleRegisterAnimal,onUpdateAnimalProduction:handleUpdateAnimalProduction,animals:animals,currentUser:currentUser// Pasar currentUser\n});break;case'sanitaryControl':content=/*#__PURE__*/_jsx(SanitaryControlPage,{inventoryItems:inventory,onUpdateInventoryQuantity:handleUpdateInventoryQuantity});break;case'reproductiveControl':content=/*#__PURE__*/_jsx(ReproductiveControlPage,{animals:animals,onUpdateAnimalProduction:handleUpdateAnimalProduction,onRegisterAnimal:handleRegisterAnimal,onRegisterReproductiveEvent:event=>console.log('Evento registrado:',event),onDeletePregnantCow:handleDeletePregnantCow,onUpdateReproductiveRecordStatus:handleReproductiveRecordStatus,reproductiveRecords:setReproductiveRecords});break;case'inventory':content=/*#__PURE__*/_jsx(InventoryPage,{inventoryItems:inventory,onAddItem:handleAddItemToInventory,onUpdateItemQuantity:handleUpdateInventoryQuantity,onExport:handleExportInventory,animals:animals,onDeleteAnimal:handleDeleteAnimal,onEditAnimal:handleEditAnimal,onDeleteInventoryItem:handleDeleteInventoryItem});break;case'economicManagement':content=/*#__PURE__*/_jsx(EconomicManagementPage,{transactions:transactions,onAddTransaction:handleAddTransaction,onDeleteTransaction:handleDeleteTransaction,animals:animals,employees:employees,payslips:payslips,thirdPartyPayments:thirdPartyPayments,currentUser:currentUser// Pasar currentUser\n});break;case'personnelManagement':content=/*#__PURE__*/_jsx(PersonnelManagementPage,{employees:employees,tasks:tasks,onAddEmployee:handleAddEmployee,onSendPayslip:handleSendPayslip,onDeletePayslip:handleDeletePayslip,onAssignTask:handleAssignTask,onDeleteTask:handleDeleteTask,thirdPartyPayments:thirdPartyPayments,onAddThirdPartyPayment:handleAddThirdPartyPayment,onDeleteThirdPartyPayment:handleDeleteThirdPartyPayment,payslips:payslips,currentUser:currentUser// Pasar currentUser\n});break;case'subscriptionPlans':content=/*#__PURE__*/_jsx(SubscriptionPlansPage,{currentPlan:currentUser?currentUser.subscriptionPlan:'Gratuito',onUpdateSubscription:handleUpdateSubscription,plans:SUBSCRIPTION_PLANS});break;case'dashboard':default:content=/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-semibold mb-4\",children:[\"Bienvenido al Dashboard, \",currentUser?currentUser.fullName:'Usuario',\"!\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-700\",children:[\"Tu plan actual es: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:currentUser?currentUser.subscriptionPlan:'N/A'})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-700\",children:\"Selecciona una opci\\xF3n del men\\xFA lateral para empezar a gestionar tu finca.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-blue-100 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold\",children:[\"Animales (\",animals.length,\"/\",SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals===Infinity?'∞':SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold\",children:[animals.length,\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[\"(\",getRemaining('animal'),\" restantes)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-100 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold\",children:[\"Productos (\",inventory.length,\"/\",SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems===Infinity?'∞':SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold\",children:[inventory.length,\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[\"(\",getRemaining('inventoryItem'),\" restantes)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-yellow-100 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold\",children:[\"Empleados (\",employees.length,\"/\",SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees===Infinity?'∞':SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold\",children:[employees.length,\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[\"(\",getRemaining('employee'),\" restantes)\"]})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleNavigate('subscriptionPlans'),className:\"mt-6 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors\",children:\"Ver Planes de Suscripci\\xF3n\"})]});break;}return/*#__PURE__*/_jsx(DashboardLayout,{onNavigate:handleNavigate,children:content});}};return renderPage();};export default App;","map":{"version":3,"names":["React","useState","useEffect","AuthLayout","AuthRegisterForm","AuthLoginForm","DashboardLayout","AnimalRegistrationPage","SanitaryControlPage","ReproductiveControlPage","InventoryPage","EconomicManagementPage","PersonnelManagementPage","SubscriptionPlansPage","animals","initialAnimals","inventoryItems","initialInventoryItems","employees","initialEmployees","mockPayslips","initialPayslips","tasks","initialTasks","transactions","initialTransactions","reproductiveRecords","initialsetReproductiveRecords","jsx","_jsx","jsxs","_jsxs","SUBSCRIPTION_PLANS","maxAnimals","maxEmployees","maxInventoryItems","price","benefits","Infinity","App","currentPage","setCurrentPage","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","loadFromLocalStorage","key","defaultValue","saved","localStorage","getItem","JSON","parse","error","console","concat","saveToLocalStorage","value","setItem","stringify","setAnimals","inventory","setInventory","setReproductiveRecords","setEmployees","setTasks","setTransactions","payslips","setPayslips","thirdPartyPayments","setThirdPartyPayments","registeredUsers","setRegisteredUsers","checkLimit","type","plan","subscriptionPlan","length","getRemaining","handleRegisterAnimal","newAnimal","alert","handleUpdateAnimalProduction","animalId","updateData","updatedAnimal","map","animal","id","_objectSpread","updated","handleReproductiveRecordStatus","nuevoEstado","registros","actualizados","r","estado","handleDeletePregnantCow","prev","estadoReproductivo","fechaUltimaGestacion","handleEditAnimal","handleDeleteAnimal","filter","handleAddItemToInventory","newItem","handleUpdateInventoryQuantity","itemId","amountUsed","item","newQuantity","quantity","handleDeleteInventoryItem","handleExportInventory","handleAddTransaction","newTransaction","handleDeleteTransaction","trx","handleAddEmployee","newEmployee","handleSendPayslip","employeeId","payslipData","newPayslipId","Date","now","toString","slice","netSalaryNum","parseFloat","netSalary","handleDeletePayslip","ps","handleAssignTask","taskData","newTaskId","handleDeleteTask","task","handleAddThirdPartyPayment","paymentData","newPaymentId","amountNum","amount","personName","handleDeleteThirdPartyPayment","payment","handleLoginSuccess","user","handleRegisterUser","userData","some","u","email","newUser","handleNavigate","page","handleUpdateSubscription","planName","updatedUsers","renderPage","children","onLoginSuccess","onNavigateToRegister","onRegisterSuccess","onNavigateToLogin","content","onRegisterAnimal","onUpdateAnimalProduction","onUpdateInventoryQuantity","onRegisterReproductiveEvent","event","log","onDeletePregnantCow","onUpdateReproductiveRecordStatus","onAddItem","onUpdateItemQuantity","onExport","onDeleteAnimal","onEditAnimal","onDeleteInventoryItem","onAddTransaction","onDeleteTransaction","onAddEmployee","onSendPayslip","onDeletePayslip","onAssignTask","onDeleteTask","onAddThirdPartyPayment","onDeleteThirdPartyPayment","currentPlan","onUpdateSubscription","plans","className","fullName","onClick","onNavigate"],"sources":["C:/Users/User/Downloads/project (10)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AuthLayout from './components/AuthLayout';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport DashboardLayout from './components/DashboardLayout';\nimport AnimalRegistrationPage from './components/AnimalRegistrationPage';\nimport SanitaryControlPage from './components/SanitaryControlPage';\nimport ReproductiveControlPage from './components/ReproductiveControlPage';\nimport InventoryPage from './components/InventoryPage';\nimport EconomicManagementPage from './components/EconomicManagementPage';\nimport PersonnelManagementPage from './components/PersonnelManagementPage';\nimport SubscriptionPlansPage from './components/SubscriptionPlansPage';\n\n// Importar datos simulados (ahora vacíos para que el usuario los cree)\n// Los datos iniciales se cargarán desde localStorage\nimport { animals as initialAnimals } from './mock/animals';\nimport { inventoryItems as initialInventoryItems } from './mock/inventory';\nimport { employees as initialEmployees, mockPayslips as initialPayslips } from './mock/employees';\nimport { tasks as initialTasks } from './mock/tasks';\nimport { transactions as initialTransactions } from './mock/transactions';\nimport {reproductiveRecords as initialsetReproductiveRecords} from './mock/reproductive';\n\nconst SUBSCRIPTION_PLANS = {\n  \"Gratuito\": {\n    maxAnimals: 10,\n    maxEmployees: 1,\n    maxInventoryItems: 15,\n    price: 0,\n    benefits: [\"Registro básico\", \"Reportes limitados\"]\n  },\n  \"Basico\": {\n    maxAnimals: 18,\n    maxEmployees: 2,\n    maxInventoryItems: 25,\n    price: 2.99,\n    benefits: [\"Todo lo gratuito\", \"Más animales y empleados\", \"Reportes detallados\"]\n  },\n  \"Standard\": {\n    maxAnimals: 28,\n    maxEmployees: 5,\n    maxInventoryItems: Infinity, // Productos ilimitados\n    price: 6.99,\n    benefits: [\"Todo lo básico\", \"Más capacidad\", \"Productos ilimitados\"]\n  },\n  \"Premium\": {\n    maxAnimals: Infinity,\n    maxEmployees: Infinity,\n    maxInventoryItems: Infinity,\n    price: 24.99,\n    benefits: [\"Todo ilimitado\", \"Asesoría empresarial (simulado)\", \"Seguimiento y consultas veterinarias gratis (simulado)\"]\n  }\n};\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('login');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n\n  // Función helper para cargar desde localStorage\n  const loadFromLocalStorage = (key, defaultValue) => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (error) {\n      console.error(`Error loading ${key} from localStorage:`, error);\n      return defaultValue;\n    }\n  };\n\n  // Función helper para guardar en localStorage\n  const saveToLocalStorage = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(`Error saving ${key} to localStorage:`, error);\n    }\n  };\n\n  // Estados para los datos de la aplicación, cargados desde localStorage\n  const [animals, setAnimals] = useState(() => loadFromLocalStorage('animals', initialAnimals));\n  const [inventory, setInventory] = useState(() => loadFromLocalStorage('inventory', initialInventoryItems));\n  const [reproductiveRecords, setReproductiveRecords]=useState(() => loadFromLocalStorage('reproductiveRecords', initialsetReproductiveRecords));\n  const [employees, setEmployees] = useState(() => loadFromLocalStorage('employees', initialEmployees));\n  const [tasks, setTasks] = useState(() => loadFromLocalStorage('tasks', initialTasks));\n  const [transactions, setTransactions] = useState(() => loadFromLocalStorage('transactions', initialTransactions));\n  const [payslips, setPayslips] = useState(() => loadFromLocalStorage('payslips', initialPayslips));\n  const [thirdPartyPayments, setThirdPartyPayments] = useState(() => loadFromLocalStorage('thirdPartyPayments', []));\n\n  // Estado para manejar todos los usuarios registrados\n  const [registeredUsers, setRegisteredUsers] = useState(() => loadFromLocalStorage('registeredUsers', []));\n\n  // --- Efectos para guardar en localStorage cada vez que los estados cambian ---\n  useEffect(() => { saveToLocalStorage('registeredUsers', registeredUsers); }, [registeredUsers]);\n  useEffect(() => { saveToLocalStorage('animals', animals); }, [animals]);\n  useEffect(() => { saveToLocalStorage('inventory', inventory); }, [inventory]);\n  useEffect(() => { saveToLocalStorage('employees', employees); }, [employees]);\n  useEffect(() => { saveToLocalStorage('tasks', tasks); }, [tasks]);\n  useEffect(() => { saveToLocalStorage('transactions', transactions); }, [transactions]);\n  useEffect(() => { saveToLocalStorage('payslips', payslips); }, [payslips]);\n  useEffect(() => { saveToLocalStorage('thirdPartyPayments', thirdPartyPayments); }, [thirdPartyPayments]);\n  useEffect(() => { saveToLocalStorage('gestacionRecords', reproductiveRecords); }, [reproductiveRecords]);\n\n\n\n  // --- Funciones de Control de Límites ---\n  const checkLimit = (type) => {\n    if (!currentUser) return false;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return false;\n\n    switch (type) {\n      case 'animal':\n        return animals.length < plan.maxAnimals;\n      case 'employee':\n        return employees.length < plan.maxEmployees;\n      case 'inventoryItem':\n        return inventory.length < plan.maxInventoryItems;\n      default:\n        return false;\n    }\n  };\n\n  const getRemaining = (type) => {\n    if (!currentUser) return 0;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return 0;\n\n    switch (type) {\n      case 'animal':\n        return plan.maxAnimals === Infinity ? 'Ilimitado' : plan.maxAnimals - animals.length;\n      case 'employee':\n        return plan.maxEmployees === Infinity ? 'Ilimitado' : plan.maxEmployees - employees.length;\n      case 'inventoryItem':\n        return plan.maxInventoryItems === Infinity ? 'Ilimitado' : plan.maxInventoryItems - inventory.length;\n      default:\n        return 0;\n    }\n  };\n\n  // --- Funciones de Manejo de Datos ---\n\n  // Animales\n  const handleRegisterAnimal = (newAnimal) => {\n    if (!checkLimit('animal')) {\n      alert(`Límite de animales alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setAnimals([...animals, newAnimal]);\n  };\n\n  const handleUpdateAnimalProduction = (animalId, updateData) => {\n   const updatedAnimal = animals.map(animal =>\n      animal.id === animalId ? { ...animal, ...updateData } : animal\n    );\n    setAnimals(updatedAnimal);\n    localStorage.setItem('animals', JSON.stringify(updated));\n };\n \n  const handleReproductiveRecordStatus = (id, nuevoEstado) => {\n  const registros = JSON.parse(localStorage.getItem('gestacionRecords')) || [];\n  const actualizados = registros.map(r =>\n    r.id === id ? { ...r, estado: nuevoEstado } : r\n  );\n  localStorage.setItem('gestacionRecords', JSON.stringify(actualizados));\n};\n\n\n  const handleDeletePregnantCow = (id) => {\n  setAnimals(prev =>\n    prev.map(animal =>\n      animal.id === id\n        ? { ...animal, estadoReproductivo: '', fechaUltimaGestacion: '' }\n        : animal\n       )\n     );\n   };\n\n    const handleEditAnimal = (updatedAnimal) => {\n    setAnimals(animals.map(animal =>\n      animal.id === updatedAnimal.id ? updatedAnimal : animal\n    ));\n  };\n\n  const handleDeleteAnimal = (id) => {\n    setAnimals(animals.filter(animal => animal.id !== id));\n  };\n\n  // Inventario\n  const handleAddItemToInventory = (newItem) => {\n    if (!checkLimit('inventoryItem')) {\n      alert(`Límite de productos en inventario alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setInventory([...inventory, newItem]);\n  };\n\n  const handleUpdateInventoryQuantity = (itemId, amountUsed) => {\n    setInventory(inventory.map(item => {\n      if (item.id === itemId) {\n        const newQuantity = item.quantity - amountUsed;\n        return { ...item, quantity: newQuantity > 0 ? newQuantity : 0 };\n      }\n      return item;\n    }).filter(item => item.quantity > 0));\n  };\n\n  const handleDeleteInventoryItem = (id) => {\n    setInventory(inventory.filter(item => item.id !== id));\n  };\n\n  const handleExportInventory = (type) => {\n    alert(`Exportando inventario a ${type} (simulado).`);\n  };\n\n  // Transacciones Económicas\n  const handleAddTransaction = (newTransaction) => {\n    setTransactions([...transactions, newTransaction]);\n  };\n\n  const handleDeleteTransaction = (id) => {\n    setTransactions(transactions.filter(trx => trx.id !== id));\n  };\n\n  // Empleados\n  const handleAddEmployee = (newEmployee) => {\n    if (!checkLimit('employee')) {\n      alert(`Límite de empleados alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setEmployees([...employees, newEmployee]);\n  };\n\n  const handleSendPayslip = (employeeId, payslipData) => {\n    const newPayslipId = `PS-${Date.now().toString().slice(-5)}`;\n    const netSalaryNum = parseFloat(payslipData.netSalary) || 0;\n    setPayslips([...payslips, { ...payslipData, id: newPayslipId, employeeId, netSalary: netSalaryNum }]);\n    alert(`Ficha de pago para ${employeeId} enviada por correo (simulado).`);\n  };\n\n  const handleDeletePayslip = (id) => {\n    setPayslips(payslips.filter(ps => ps.id !== id));\n  };\n\n  const handleAssignTask = (employeeId, taskData) => {\n    const newTaskId = `TASK-${Date.now().toString().slice(-5)}`;\n    setTasks([...tasks, { ...taskData, id: newTaskId, employeeId }]);\n    alert(`Tarea asignada a ${employeeId} (simulado).`);\n  };\n\n  const handleDeleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Pagos a terceros\n  const handleAddThirdPartyPayment = (paymentData) => {\n    const newPaymentId = `TPP-${Date.now().toString().slice(-5)}`;\n    const amountNum = parseFloat(paymentData.amount) || 0;\n    setThirdPartyPayments([...thirdPartyPayments, { ...paymentData, id: newPaymentId, amount: amountNum }]);\n    alert(`Pago a tercero ${paymentData.personName} registrado.`);\n  };\n\n  const handleDeleteThirdPartyPayment = (id) => {\n    setThirdPartyPayments(thirdPartyPayments.filter(payment => payment.id !== id));\n  };\n\n  // --- Funciones de Navegación y Autenticación ---\n  const handleLoginSuccess = (user) => {\n    setIsLoggedIn(true);\n    setCurrentUser(user);\n    setCurrentPage('dashboard');\n  };\n\n  const handleRegisterUser = (userData) => {\n    // Verificar si el email ya existe\n    if (registeredUsers.some(u => u.email === userData.email)) {\n      alert('Este correo ya está registrado. Por favor, inicia sesión o usa otro correo.');\n      return false;\n    }\n    const newUser = { ...userData, id: `USR-${Date.now().toString().slice(-5)}`, subscriptionPlan: \"Gratuito\" };\n    setRegisteredUsers([...registeredUsers, newUser]);\n    return true; // Registro exitoso\n  };\n\n  const handleNavigate = (page) => {\n    if (page === 'logout') {\n      setIsLoggedIn(false);\n      setCurrentUser(null);\n      setCurrentPage('login');\n    } else {\n      setCurrentPage(page);\n    }\n  };\n\n  const handleUpdateSubscription = (planName) => {\n    if (currentUser) {\n      const updatedUsers = registeredUsers.map(u =>\n        u.id === currentUser.id ? { ...u, subscriptionPlan: planName } : u\n      );\n      setRegisteredUsers(updatedUsers);\n      setCurrentUser({ ...currentUser, subscriptionPlan: planName });\n      alert(`Tu plan ha sido actualizado a ${planName}. (Simulado)`);\n      setCurrentPage('dashboard');\n    }\n  };\n\n  // --- Renderizado de Páginas ---\n  const renderPage = () => {\n    if (!isLoggedIn) {\n      return (\n        <AuthLayout>\n          {currentPage === 'login' ? (\n            <AuthLoginForm onLoginSuccess={handleLoginSuccess} onNavigateToRegister={() => setCurrentPage('register')} registeredUsers={registeredUsers} />\n          ) : (\n            <AuthRegisterForm onRegisterSuccess={handleRegisterUser} onNavigateToLogin={() => setCurrentPage('login')} />\n          )}\n        </AuthLayout>\n      );\n    } else {\n      let content;\n      switch (currentPage) {\n        case 'animalRegistration':\n          content = (\n            <AnimalRegistrationPage\n              onRegisterAnimal={handleRegisterAnimal}\n              onUpdateAnimalProduction={handleUpdateAnimalProduction}\n              animals={animals}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'sanitaryControl':\n          content = (\n            <SanitaryControlPage\n              inventoryItems={inventory}\n              onUpdateInventoryQuantity={handleUpdateInventoryQuantity}\n            />\n          );\n          break;\n       case 'reproductiveControl':\n         content = (\n           <ReproductiveControlPage\n             animals={animals}\n             onUpdateAnimalProduction={handleUpdateAnimalProduction}\n             onRegisterAnimal={handleRegisterAnimal}\n             onRegisterReproductiveEvent={(event) => console.log('Evento registrado:', event)}\n             onDeletePregnantCow={handleDeletePregnantCow}\n             onUpdateReproductiveRecordStatus={handleReproductiveRecordStatus}\n             reproductiveRecords={setReproductiveRecords}\n             \n           />\n         );\n         break;\n        case 'inventory':\n          content = (\n            <InventoryPage\n              inventoryItems={inventory}\n              onAddItem={handleAddItemToInventory}\n              onUpdateItemQuantity={handleUpdateInventoryQuantity}\n              onExport={handleExportInventory}\n              animals={animals}\n              onDeleteAnimal={handleDeleteAnimal}\n              onEditAnimal={handleEditAnimal}\n              onDeleteInventoryItem={handleDeleteInventoryItem}\n            />\n          );\n          break;\n        case 'economicManagement':\n          content = (\n            <EconomicManagementPage\n              transactions={transactions}\n              onAddTransaction={handleAddTransaction}\n              onDeleteTransaction={handleDeleteTransaction}\n              animals={animals}\n              employees={employees}\n              payslips={payslips}\n              thirdPartyPayments={thirdPartyPayments}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'personnelManagement':\n          content = (\n            <PersonnelManagementPage\n              employees={employees}\n              tasks={tasks}\n              onAddEmployee={handleAddEmployee}\n              onSendPayslip={handleSendPayslip}\n              onDeletePayslip={handleDeletePayslip}\n              onAssignTask={handleAssignTask}\n              onDeleteTask={handleDeleteTask}\n              thirdPartyPayments={thirdPartyPayments}\n              onAddThirdPartyPayment={handleAddThirdPartyPayment}\n              onDeleteThirdPartyPayment={handleDeleteThirdPartyPayment}\n              payslips={payslips}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'subscriptionPlans':\n          content = (\n            <SubscriptionPlansPage\n              currentPlan={currentUser ? currentUser.subscriptionPlan : 'Gratuito'}\n              onUpdateSubscription={handleUpdateSubscription}\n              plans={SUBSCRIPTION_PLANS}\n            />\n          );\n          break;\n        case 'dashboard':\n        default:\n          content = (\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\n              <h3 className=\"text-xl font-semibold mb-4\">Bienvenido al Dashboard, {currentUser ? currentUser.fullName : 'Usuario'}!</h3>\n              <p className=\"text-gray-700\">Tu plan actual es: <span className=\"font-bold\">{currentUser ? currentUser.subscriptionPlan : 'N/A'}</span></p>\n              <p className=\"text-700\">Selecciona una opción del menú lateral para empezar a gestionar tu finca.</p>\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-blue-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Animales ({animals.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals})</h4>\n                  <p className=\"text-2xl font-bold\">{animals.length} <span className=\"text-sm text-gray-600\">({getRemaining('animal')} restantes)</span></p>\n                </div>\n                <div className=\"p-4 bg-green-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Productos ({inventory.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems})</h4>\n                  <p className=\"text-2xl font-bold\">{inventory.length} <span className=\"text-sm text-gray-600\">({getRemaining('inventoryItem')} restantes)</span></p>\n                </div>\n                <div className=\"p-4 bg-yellow-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Empleados ({employees.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees})</h4>\n                  <p className=\"text-2xl font-bold\">{employees.length} <span className=\"text-sm text-gray-600\">({getRemaining('employee')} restantes)</span></p>\n                </div>\n              </div>\n              <button\n                onClick={() => handleNavigate('subscriptionPlans')}\n                className=\"mt-6 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors\"\n              >\n                Ver Planes de Suscripción\n              </button>\n            </div>\n          );\n          break;\n      }\n      return <DashboardLayout onNavigate={handleNavigate}>{content}</DashboardLayout>;\n    }\n  };\n\n  return renderPage();\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}