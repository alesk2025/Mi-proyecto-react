{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\project (10)\\\\src\\\\components\\\\EconomicManagementPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport EconomicReportSummary from './EconomicManagement/EconomicReportSummary';\nimport AnimalProfitabilitySection from './EconomicManagement/AnimalProfitabilitySection';\nimport TransactionForm from './EconomicManagement/TransactionForm';\nimport TransactionHistory from './EconomicManagement/TransactionHistory';\nimport SupplierClientManagement from './EconomicManagement/SupplierClientManagement'; // Nuevo componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EconomicManagementPage = ({\n  transactions,\n  onAddTransaction,\n  onDeleteTransaction,\n  animals,\n  employees,\n  payslips,\n  thirdPartyPayments,\n  currentUser,\n  logoUrl,\n  suppliers,\n  clients,\n  debts,\n  credits,\n  addSupplier,\n  addClient,\n  addDebt,\n  payDebt,\n  addCredit,\n  collectCredit\n}) => {\n  _s();\n  const [transaction, setTransaction] = useState({\n    type: 'ingreso',\n    category: '',\n    amount: '',\n    description: '',\n    animalId: '',\n    product: '',\n    quantity: '',\n    unit: '',\n    pricePerUnit: '',\n    client: '',\n    date: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: ''\n  });\n  const [reportPeriod, setReportPeriod] = useState('monthly');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7));\n  const [selectedWeek, setSelectedWeek] = useState(getWeekNumber(new Date()));\n  const [sharedExpensesBreakdown, setSharedExpensesBreakdown] = useState({});\n  const sharedExpenseCategories = ['alimento', 'desparasitante', 'vitaminas', 'vacunas'];\n\n  // --- Funciones de Utilidad de Fechas ---\n  const normalizeDate = date => {\n    const d = new Date(date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  };\n  function getWeekNumber(d) {\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    const weekNo = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n    return {\n      year: d.getUTCFullYear(),\n      week: weekNo\n    };\n  }\n  const getStartAndEndOfWeek = (year, week) => {\n    const date = new Date(year, 0, 1 + (week - 1) * 7);\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1);\n    const startOfWeek = normalizeDate(new Date(date.setDate(diff)));\n    const endOfWeek = normalizeDate(new Date(startOfWeek));\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\n    return {\n      start: startOfWeek,\n      end: endOfWeek\n    };\n  };\n\n  // --- Lógica de Filtrado de Reportes ---\n  const filterItemsBySelectedPeriod = (items, dateProp) => {\n    return items.filter(item => {\n      const itemDate = normalizeDate(item[dateProp]);\n      if (reportPeriod === 'daily') {\n        const selectedDay = normalizeDate(selectedDate);\n        return itemDate.getTime() === selectedDay.getTime();\n      } else if (reportPeriod === 'weekly') {\n        const {\n          start,\n          end\n        } = getStartAndEndOfWeek(selectedWeek.year, selectedWeek.week);\n        return itemDate >= start && itemDate <= end;\n      } else if (reportPeriod === 'monthly') {\n        const [year, month] = selectedMonth.split('-').map(Number);\n        return itemDate.getFullYear() === year && itemDate.getMonth() === month - 1;\n      }\n      return false;\n    });\n  };\n  const currentPeriodTransactions = filterItemsBySelectedPeriod(transactions, 'date');\n  const currentPeriodPayslips = filterItemsBySelectedPeriod(payslips, 'paymentDate');\n  const currentPeriodThirdPartyPayments = filterItemsBySelectedPeriod(thirdPartyPayments, 'date');\n  const totalIncomePeriod = currentPeriodTransactions.filter(t => t.type === 'ingreso' || t.type === 'venta').reduce((sum, t) => sum + t.total, 0);\n  const transactionExpensesPeriod = currentPeriodTransactions.filter(t => t.type === 'gasto' || t.type === 'compra').reduce((sum, t) => sum + t.total, 0);\n  const payslipExpensesPeriod = currentPeriodPayslips.reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n  const thirdPartyExpensesPeriod = currentPeriodThirdPartyPayments.reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  const totalExpensesPeriod = transactionExpensesPeriod + payslipExpensesPeriod + thirdPartyExpensesPeriod;\n  const netProfitPeriod = totalIncomePeriod - totalExpensesPeriod;\n\n  // --- Lógica de Rentabilidad por Animal ---\n  const safeEmployees = employees || [];\n  const safeAnimals = animals || [];\n\n  // Costo de mano de obra (salarios)\n  // Se asegura que si no hay empleados, el totalSalaries sea 0\n  const totalSalaries = payslipExpensePeriod;\n  // Se asegura que si no hay animales, el proratedLaborCostPerAnimal sea 0 para evitar división por cero\n  const proratedLaborCostPerAnimal = safeAnimals.length > 0 ? totalSalaries / safeAnimals.length : 0;\n\n  // Costos compartidos (alimento, desparasitante, vitaminas, vacunas)\n  const totalSharedExpenses = transactions.filter(t => (t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())).reduce((sum, t) => sum + t.total, 0);\n  const proratedSharedExpensePerAnimal = safeAnimals.length > 0 ? totalSharedExpenses / safeAnimals.length : 0;\n\n  // Gastos de terceros (general y específico)\n  // Se asegura que si no hay pagos a terceros, el generalThirdPartyExpenses sea 0\n  const generalThirdPartyExpenses = thirdPartyPayments.filter(tpp => tpp.appliesTo === 'general').reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  const proratedGeneralThirdPartyExpensePerAnimal = safeAnimals.length > 0 ? generalThirdPartyExpenses / safeAnimals.length : 0;\n  const animalProfitability = safeAnimals.map(animal => {\n    const animalIncome = transactions.filter(t => t.animalId === animal.id && t.type === 'venta').reduce((sum, t) => sum + t.total, 0);\n    const animalExpenses = transactions.filter(t => t.animalId === animal.id && (t.type === 'gasto' || t.type === 'compra') && !sharedExpenseCategories.includes(t.category.toLowerCase())).reduce((sum, t) => sum + t.total, 0);\n\n    // Gastos de terceros específicos para este animal\n    const specificThirdPartyExpensesForAnimal = thirdPartyPayments.filter(tpp => tpp.appliesTo === 'specific' && tpp.targetAnimalId === animal.id).reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n    const totalCost = animalExpenses + proratedLaborCostPerAnimal + proratedSharedExpensePerAnimal + specificThirdPartyExpensesForAnimal + proratedGeneralThirdPartyExpensePerAnimal;\n    const netProfitAnimal = animalIncome - totalCost;\n    return {\n      id: animal.id,\n      name: animal.name,\n      tipoProduccion: animal.tipoProduccion,\n      status: animal.estadoReproductivo,\n      income: animalIncome,\n      expenses: animalExpenses,\n      proratedLabor: proratedLaborCostPerAnimal,\n      // Ahora incluye el salario prorrateado\n      proratedSharedExpenses: proratedSharedExpensePerAnimal,\n      specificThirdPartyExpenses: specificThirdPartyExpensesForAnimal,\n      // Nuevo campo\n      proratedGeneralThirdPartyExpenses: proratedGeneralThirdPartyExpensePerAnimal,\n      // Nuevo campo\n      totalCost: totalCost,\n      netProfit: netProfitAnimal\n    };\n  });\n\n  // Efecto para calcular el desglose de gastos compartidos\n  useEffect(() => {\n    const breakdown = {};\n    sharedExpenseCategories.forEach(cat => {\n      breakdown[cat] = 0;\n    });\n    transactions.forEach(t => {\n      if ((t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())) {\n        breakdown[t.category.toLowerCase()] += t.total;\n      }\n    });\n    setSharedExpensesBreakdown(breakdown);\n  }, [transactions]);\n\n  // Información de la finca/criador para PDFs\n  const farmName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.farmName) || 'Mi Finca Ganadera';\n  const adminName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fullName) || 'Administrador';\n  const defaultLogo = 'https://via.placeholder.com/50x50?text=LOGO'; // Placeholder de logo\n\n  const calculateTotalSale = () => {\n    // Moved from TransactionForm\n    const qty = parseFloat(transaction.quantity);\n    const price = parseFloat(transaction.pricePerUnit);\n    return (qty * price).toFixed(2);\n  };\n  const handleSubmit = () => {\n    // Moved from TransactionForm\n    if (!transaction.date) {\n      alert('Por favor, selecciona la fecha de la transacción.');\n      return;\n    }\n    if (transaction.type === 'ingreso' && (!transaction.startDate || !transaction.endDate)) {\n      alert('Para ingresos, por favor, selecciona la fecha de inicio y fin del período.');\n      return;\n    }\n    let finalTransaction = {\n      ...transaction\n    };\n    if (transaction.type === 'venta') {\n      finalTransaction.total = parseFloat(calculateTotalSale());\n    } else {\n      finalTransaction.total = parseFloat(transaction.amount);\n    }\n    const newId = `TRX-${Date.now().toString().slice(-5)}`;\n    onAddTransaction({\n      ...finalTransaction,\n      id: newId\n    });\n    alert(`Transacción de ${finalTransaction.type} registrada por $${finalTransaction.total}.`);\n    // Limpiar formulario\n    setTransaction({\n      type: 'ingreso',\n      category: '',\n      amount: '',\n      description: '',\n      animalId: '',\n      product: '',\n      quantity: '',\n      unit: '',\n      pricePerUnit: '',\n      client: '',\n      date: new Date().toISOString().split('T')[0],\n      // Resetear fecha a hoy\n      startDate: '',\n      endDate: '' // Resetear campos de fecha de período\n    });\n  };\n  const handleGenerateInvoice = saleData => {\n    if (!saleData || !saleData.client || !saleData.product || !saleData.quantity || !saleData.pricePerUnit) {\n      alert('Por favor, completa todos los campos de la venta para generar la factura.');\n      return;\n    }\n    const precioUnitario = parseFloat(saleData.pricePerUnit || 0);\n    const cantidad = parseFloat(saleData.quantity || 0);\n    const total = cantidad * precioUnitario;\n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm'; // A4 width\n    tempDiv.style.padding = '15mm'; // Padding para el contenido\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.backgroundColor = '#f8f8f8'; // Fondo ligeramente gris\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n    tempDiv.innerHTML = `\n      <div style=\"border: 1px solid #ddd; border-radius: 12px; overflow: hidden; background-color: #fff; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\n        <div style=\"background-color: #2c3e50; color: #fff; padding: 20px; display: flex; justify-content: space-between; align-items: center; border-top-left-radius: 10px; border-top-right-radius: 10px;\">\n          <img src=\"${logoUrl || defaultLogo}\" style=\"width: 80px; height: 80px; border-radius: 50%; object-fit: cover;\" alt=\"Logo Finca\">\n          <div style=\"text-align: right;\">\n            <h1 style=\"margin: 0; font-size: 24pt; font-weight: bold;\">${farmName}</h1>\n            <p style=\"margin: 0; font-size: 12pt; opacity: 0.8;\">Factura de Venta</p>\n          </div>\n        </div>\n  \n        <div style=\"padding: 25px;\">\n          <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\n            <div>\n              <p style=\"margin: 0;\"><strong>Factura ID:</strong> ${saleData.id || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Fecha:</strong> ${saleData.date || 'N/A'}</p>\n            </div>\n            <div style=\"text-align: right;\">\n              <p style=\"margin: 0;\"><strong>Cliente:</strong> ${saleData.client || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Descripción:</strong> ${saleData.description || 'Venta de productos'}</p>\n            </div>\n          </div>\n  \n          <table style=\"width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 30px;\">\n            <thead style=\"background-color: #f0f0f0;\">\n              <tr>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Producto</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Cantidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Unidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Precio Unitario</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.product}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.quantity}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.unit}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${precioUnitario.toFixed(2)}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${total.toFixed(2)}</td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <div style=\"text-align: right; margin-top: 20px;\">\n            <p style=\"font-size: 14pt; font-weight: bold; color: #2c3e50; margin: 0;\">Total a Pagar: <span style=\"color: #27ae60;\">$${total.toFixed(2)}</span></p>\n          </div>\n        </div>\n  \n        <div style=\"text-align: center; padding: 20px; background-color: #f0f0f0; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"font-size: 9pt; color: #555; margin: 0;\">¡Gracias por tu compra!</p>\n        </div>\n  \n        <div style=\"text-align: right; font-size: 8pt; padding: 10px 20px; color: #aaa; background-color: #f8f8f8; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n          <p style=\"margin: 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n        </div>\n      </div>\n    `;\n    document.body.appendChild(tempDiv);\n    html2canvas(tempDiv, {\n      scale: 2,\n      useCORS: true\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const pageHeight = 297;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      let heightLeft = imgHeight;\n      let position = 0;\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n      while (heightLeft >= pageHeight) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n      pdf.save(`factura_${saleData.client || 'sin_cliente'}_${saleData.id || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Gesti\\xF3n Econ\\xF3mica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EconomicReportSummary, {\n      reportPeriod: reportPeriod,\n      selectedDate: selectedDate,\n      selectedMonth: selectedMonth,\n      selectedWeek: selectedWeek,\n      setSelectedDate: setSelectedDate,\n      setSelectedMonth: setSelectedMonth,\n      setReportPeriod: setReportPeriod,\n      totalIncomePeriod: totalIncomePeriod,\n      totalExpensesPeriod: totalExpensesPeriod,\n      netProfitPeriod: netProfitPeriod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimalProfitabilitySection, {\n      animalProfitability: animalProfitability,\n      totalSharedExpenses: totalSharedExpenses,\n      sharedExpensesBreakdown: sharedExpensesBreakdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      transaction: transaction,\n      handleInputChange: e => setTransaction({\n        ...transaction,\n        [e.target.name]: e.target.value\n      }),\n      handleSubmit: handleSubmit,\n      handleGenerateInvoice: handleGenerateInvoice,\n      animals: safeAnimals,\n      calculateTotalSale: calculateTotalSale // Pass calculateTotalSale to TransactionForm\n      ,\n      suppliers: suppliers,\n      clients: clients,\n      addSupplier: addSupplier,\n      addClient: addClient,\n      debts: debts,\n      credits: credits,\n      addDebt: addDebt,\n      payDebt: payDebt,\n      addCredit: addCredit,\n      collectCredit: collectCredit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      transactions: transactions,\n      onDeleteTransaction: onDeleteTransaction,\n      handleGenerateInvoice: handleGenerateInvoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SupplierClientManagement, {\n      suppliers: suppliers,\n      clients: clients,\n      debts: debts,\n      credits: credits,\n      addSupplier: addSupplier,\n      addClient: addClient,\n      addDebt: addDebt,\n      payDebt: payDebt,\n      addCredit: addCredit,\n      collectCredit: collectCredit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(EconomicManagementPage, \"DkEJhO0PQ7i7M1YZsgMZL3ca/4Y=\");\n_c = EconomicManagementPage;\nexport default EconomicManagementPage;\nvar _c;\n$RefreshReg$(_c, \"EconomicManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","html2canvas","EconomicReportSummary","AnimalProfitabilitySection","TransactionForm","TransactionHistory","SupplierClientManagement","jsxDEV","_jsxDEV","EconomicManagementPage","transactions","onAddTransaction","onDeleteTransaction","animals","employees","payslips","thirdPartyPayments","currentUser","logoUrl","suppliers","clients","debts","credits","addSupplier","addClient","addDebt","payDebt","addCredit","collectCredit","_s","transaction","setTransaction","type","category","amount","description","animalId","product","quantity","unit","pricePerUnit","client","date","Date","toISOString","split","startDate","endDate","reportPeriod","setReportPeriod","selectedDate","setSelectedDate","selectedMonth","setSelectedMonth","slice","selectedWeek","setSelectedWeek","getWeekNumber","sharedExpensesBreakdown","setSharedExpensesBreakdown","sharedExpenseCategories","normalizeDate","d","setHours","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","year","week","getStartAndEndOfWeek","day","getDay","diff","startOfWeek","setDate","endOfWeek","start","end","filterItemsBySelectedPeriod","items","dateProp","filter","item","itemDate","selectedDay","getTime","month","map","Number","currentPeriodTransactions","currentPeriodPayslips","currentPeriodThirdPartyPayments","totalIncomePeriod","t","reduce","sum","total","transactionExpensesPeriod","payslipExpensesPeriod","ps","parseFloat","netSalary","thirdPartyExpensesPeriod","tpp","totalExpensesPeriod","netProfitPeriod","safeEmployees","safeAnimals","totalSalaries","payslipExpensePeriod","proratedLaborCostPerAnimal","length","totalSharedExpenses","includes","toLowerCase","proratedSharedExpensePerAnimal","generalThirdPartyExpenses","appliesTo","proratedGeneralThirdPartyExpensePerAnimal","animalProfitability","animal","animalIncome","id","animalExpenses","specificThirdPartyExpensesForAnimal","targetAnimalId","totalCost","netProfitAnimal","name","tipoProduccion","status","estadoReproductivo","income","expenses","proratedLabor","proratedSharedExpenses","specificThirdPartyExpenses","proratedGeneralThirdPartyExpenses","netProfit","breakdown","forEach","cat","farmName","adminName","fullName","defaultLogo","calculateTotalSale","qty","price","toFixed","handleSubmit","alert","finalTransaction","newId","now","toString","handleGenerateInvoice","saleData","precioUnitario","cantidad","tempDiv","document","createElement","style","width","padding","fontFamily","fontSize","backgroundColor","position","left","top","innerHTML","toLocaleDateString","body","appendChild","scale","useCORS","then","canvas","imgData","toDataURL","pdf","imgWidth","pageHeight","imgHeight","height","heightLeft","addImage","addPage","save","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/project (10)/src/components/EconomicManagementPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport EconomicReportSummary from './EconomicManagement/EconomicReportSummary';\nimport AnimalProfitabilitySection from './EconomicManagement/AnimalProfitabilitySection';\nimport TransactionForm from './EconomicManagement/TransactionForm';\nimport TransactionHistory from './EconomicManagement/TransactionHistory';\nimport SupplierClientManagement from './EconomicManagement/SupplierClientManagement'; // Nuevo componente\n\nconst EconomicManagementPage = ({ transactions, onAddTransaction, onDeleteTransaction, animals, employees, payslips, thirdPartyPayments, currentUser, logoUrl, suppliers, clients, debts, credits, addSupplier, addClient, addDebt, payDebt, addCredit, collectCredit }) => {\n  const [transaction, setTransaction] = useState({\n    type: 'ingreso',\n    category: '',\n    amount: '',\n    description: '',\n    animalId: '',\n    product: '',\n    quantity: '',\n    unit: '',\n    pricePerUnit: '',\n    client: '',\n    date: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: '',\n  });\n  const [reportPeriod, setReportPeriod] = useState('monthly');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7));\n  const [selectedWeek, setSelectedWeek] = useState(getWeekNumber(new Date()));\n  const [sharedExpensesBreakdown, setSharedExpensesBreakdown] = useState({});\n  \n\n  const sharedExpenseCategories = ['alimento', 'desparasitante', 'vitaminas', 'vacunas'];\n\n  // --- Funciones de Utilidad de Fechas ---\n  const normalizeDate = (date) => {\n    const d = new Date(date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  };\n\n  function getWeekNumber(d) {\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    const weekNo = Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\n    return { year: d.getUTCFullYear(), week: weekNo };\n  }\n\n  const getStartAndEndOfWeek = (year, week) => {\n    const date = new Date(year, 0, 1 + (week - 1) * 7);\n    const day = date.getDay();\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1);\n    const startOfWeek = normalizeDate(new Date(date.setDate(diff)));\n    const endOfWeek = normalizeDate(new Date(startOfWeek));\n    endOfWeek.setDate(startOfWeek.getDate() + 6);\n    return { start: startOfWeek, end: endOfWeek };\n  };\n\n  // --- Lógica de Filtrado de Reportes ---\n  const filterItemsBySelectedPeriod = (items, dateProp) => {\n    return items.filter(item => {\n      const itemDate = normalizeDate(item[dateProp]);\n\n      if (reportPeriod === 'daily') {\n        const selectedDay = normalizeDate(selectedDate);\n        return itemDate.getTime() === selectedDay.getTime();\n      } else if (reportPeriod === 'weekly') {\n        const { start, end } = getStartAndEndOfWeek(selectedWeek.year, selectedWeek.week);\n        return itemDate >= start && itemDate <= end;\n      } else if (reportPeriod === 'monthly') {\n        const [year, month] = selectedMonth.split('-').map(Number);\n        return itemDate.getFullYear() === year && itemDate.getMonth() === (month - 1);\n      }\n      return false;\n    });\n  };\n\n  const currentPeriodTransactions = filterItemsBySelectedPeriod(transactions, 'date');\n  const currentPeriodPayslips = filterItemsBySelectedPeriod(payslips, 'paymentDate');\n  const currentPeriodThirdPartyPayments = filterItemsBySelectedPeriod(thirdPartyPayments, 'date');\n  \n  const totalIncomePeriod = currentPeriodTransactions\n    .filter(t => t.type === 'ingreso' || t.type === 'venta')\n    .reduce((sum, t) => sum + t.total, 0);\n  \n  const transactionExpensesPeriod = currentPeriodTransactions\n    .filter(t => t.type === 'gasto' || t.type === 'compra')\n    .reduce((sum, t) => sum + t.total, 0);\n  \n  const payslipExpensesPeriod = currentPeriodPayslips\n    .reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n\n  const thirdPartyExpensesPeriod = currentPeriodThirdPartyPayments\n    .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  \n  const totalExpensesPeriod = transactionExpensesPeriod + payslipExpensesPeriod + thirdPartyExpensesPeriod;\n\n  const netProfitPeriod = totalIncomePeriod - totalExpensesPeriod;\n\n  // --- Lógica de Rentabilidad por Animal ---\n  const safeEmployees = employees || [];\n  const safeAnimals = animals || [];\n\n  // Costo de mano de obra (salarios)\n  // Se asegura que si no hay empleados, el totalSalaries sea 0\n  const totalSalaries = payslipExpensePeriod;\n  // Se asegura que si no hay animales, el proratedLaborCostPerAnimal sea 0 para evitar división por cero\n  const proratedLaborCostPerAnimal = safeAnimals.length > 0 ? totalSalaries / safeAnimals.length : 0;\n\n  // Costos compartidos (alimento, desparasitante, vitaminas, vacunas)\n  const totalSharedExpenses = transactions\n    .filter(t => \n      (t.type === 'gasto' || t.type === 'compra') && \n      sharedExpenseCategories.includes(t.category.toLowerCase())\n    )\n    .reduce((sum, t) => sum + t.total, 0);\n\n  const proratedSharedExpensePerAnimal = safeAnimals.length > 0 ? totalSharedExpenses / safeAnimals.length : 0;\n\n  // Gastos de terceros (general y específico)\n  // Se asegura que si no hay pagos a terceros, el generalThirdPartyExpenses sea 0\n  const generalThirdPartyExpenses = thirdPartyPayments\n    .filter(tpp => tpp.appliesTo === 'general')\n    .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  \n  const proratedGeneralThirdPartyExpensePerAnimal = safeAnimals.length > 0 ? generalThirdPartyExpenses / safeAnimals.length : 0;\n\n\n  const animalProfitability = safeAnimals.map(animal => {\n    const animalIncome = transactions\n      .filter(t => t.animalId === animal.id && t.type === 'venta')\n      .reduce((sum, t) => sum + t.total, 0);\n\n    const animalExpenses = transactions\n      .filter(t => t.animalId === animal.id && (t.type === 'gasto' || t.type === 'compra') && !sharedExpenseCategories.includes(t.category.toLowerCase()))\n      .reduce((sum, t) => sum + t.total, 0);\n\n    // Gastos de terceros específicos para este animal\n    const specificThirdPartyExpensesForAnimal = thirdPartyPayments\n      .filter(tpp => tpp.appliesTo === 'specific' && tpp.targetAnimalId === animal.id)\n      .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n\n    const totalCost = animalExpenses + proratedLaborCostPerAnimal + proratedSharedExpensePerAnimal + specificThirdPartyExpensesForAnimal + proratedGeneralThirdPartyExpensePerAnimal;\n    const netProfitAnimal = animalIncome - totalCost;\n\n    return {\n      id: animal.id,\n      name: animal.name,\n      tipoProduccion: animal.tipoProduccion,\n      status: animal.estadoReproductivo,\n      income: animalIncome,\n      expenses: animalExpenses,\n      proratedLabor: proratedLaborCostPerAnimal, // Ahora incluye el salario prorrateado\n      proratedSharedExpenses: proratedSharedExpensePerAnimal,\n      specificThirdPartyExpenses: specificThirdPartyExpensesForAnimal, // Nuevo campo\n      proratedGeneralThirdPartyExpenses: proratedGeneralThirdPartyExpensePerAnimal, // Nuevo campo\n      totalCost: totalCost,\n      netProfit: netProfitAnimal,\n    };\n  });\n\n  // Efecto para calcular el desglose de gastos compartidos\n  useEffect(() => {\n    const breakdown = {};\n    sharedExpenseCategories.forEach(cat => {\n      breakdown[cat] = 0;\n    });\n\n    transactions.forEach(t => {\n      if ((t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())) {\n        breakdown[t.category.toLowerCase()] += t.total;\n      }\n    });\n    setSharedExpensesBreakdown(breakdown);\n  }, [transactions]);\n\n  // Información de la finca/criador para PDFs\n  const farmName = currentUser?.farmName || 'Mi Finca Ganadera';\n  const adminName = currentUser?.fullName || 'Administrador';\n  const defaultLogo = 'https://via.placeholder.com/50x50?text=LOGO'; // Placeholder de logo\n\n  const calculateTotalSale = () => { // Moved from TransactionForm\n    const qty = parseFloat(transaction.quantity);\n    const price = parseFloat(transaction.pricePerUnit);\n    return (qty * price).toFixed(2);\n  };\n\n  const handleSubmit = () => { // Moved from TransactionForm\n    if (!transaction.date) {\n      alert('Por favor, selecciona la fecha de la transacción.');\n      return;\n    }\n    if (transaction.type === 'ingreso' && (!transaction.startDate || !transaction.endDate)) {\n      alert('Para ingresos, por favor, selecciona la fecha de inicio y fin del período.');\n      return;\n    }\n\n    let finalTransaction = { ...transaction };\n    if (transaction.type === 'venta') {\n      finalTransaction.total = parseFloat(calculateTotalSale()); \n    } else {\n      finalTransaction.total = parseFloat(transaction.amount);\n    }\n    \n    const newId = `TRX-${Date.now().toString().slice(-5)}`;\n    onAddTransaction({ ...finalTransaction, id: newId });\n    alert(`Transacción de ${finalTransaction.type} registrada por $${finalTransaction.total}.`);\n    // Limpiar formulario\n    setTransaction({\n      type: 'ingreso', category: '', amount: '', description: '',\n      animalId: '', product: '', quantity: '', unit: '', pricePerUnit: '', client: '',\n      date: new Date().toISOString().split('T')[0], // Resetear fecha a hoy\n      startDate: '', endDate: '', // Resetear campos de fecha de período\n    });\n  };\n\n  const handleGenerateInvoice = (saleData) => {\n    if (!saleData || !saleData.client || !saleData.product || !saleData.quantity || !saleData.pricePerUnit) {\n      alert('Por favor, completa todos los campos de la venta para generar la factura.');\n      return;\n    }\n  \n    const precioUnitario = parseFloat(saleData.pricePerUnit || 0);\n    const cantidad = parseFloat(saleData.quantity || 0);\n    const total = cantidad * precioUnitario;\n  \n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm'; // A4 width\n    tempDiv.style.padding = '15mm'; // Padding para el contenido\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.backgroundColor = '#f8f8f8'; // Fondo ligeramente gris\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n  \n    tempDiv.innerHTML = `\n      <div style=\"border: 1px solid #ddd; border-radius: 12px; overflow: hidden; background-color: #fff; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\n        <div style=\"background-color: #2c3e50; color: #fff; padding: 20px; display: flex; justify-content: space-between; align-items: center; border-top-left-radius: 10px; border-top-right-radius: 10px;\">\n          <img src=\"${logoUrl || defaultLogo}\" style=\"width: 80px; height: 80px; border-radius: 50%; object-fit: cover;\" alt=\"Logo Finca\">\n          <div style=\"text-align: right;\">\n            <h1 style=\"margin: 0; font-size: 24pt; font-weight: bold;\">${farmName}</h1>\n            <p style=\"margin: 0; font-size: 12pt; opacity: 0.8;\">Factura de Venta</p>\n          </div>\n        </div>\n  \n        <div style=\"padding: 25px;\">\n          <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\n            <div>\n              <p style=\"margin: 0;\"><strong>Factura ID:</strong> ${saleData.id || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Fecha:</strong> ${saleData.date || 'N/A'}</p>\n            </div>\n            <div style=\"text-align: right;\">\n              <p style=\"margin: 0;\"><strong>Cliente:</strong> ${saleData.client || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Descripción:</strong> ${saleData.description || 'Venta de productos'}</p>\n            </div>\n          </div>\n  \n          <table style=\"width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 30px;\">\n            <thead style=\"background-color: #f0f0f0;\">\n              <tr>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Producto</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Cantidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Unidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Precio Unitario</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.product}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.quantity}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.unit}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${precioUnitario.toFixed(2)}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${total.toFixed(2)}</td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <div style=\"text-align: right; margin-top: 20px;\">\n            <p style=\"font-size: 14pt; font-weight: bold; color: #2c3e50; margin: 0;\">Total a Pagar: <span style=\"color: #27ae60;\">$${total.toFixed(2)}</span></p>\n          </div>\n        </div>\n  \n        <div style=\"text-align: center; padding: 20px; background-color: #f0f0f0; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"font-size: 9pt; color: #555; margin: 0;\">¡Gracias por tu compra!</p>\n        </div>\n  \n        <div style=\"text-align: right; font-size: 8pt; padding: 10px 20px; color: #aaa; background-color: #f8f8f8; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n          <p style=\"margin: 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n        </div>\n      </div>\n    `;\n  \n    document.body.appendChild(tempDiv);\n  \n    html2canvas(tempDiv, { scale: 2, useCORS: true }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const pageHeight = 297;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      let heightLeft = imgHeight;\n      let position = 0;\n  \n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n  \n      while (heightLeft >= pageHeight) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n  \n      pdf.save(`factura_${saleData.client || 'sin_cliente'}_${saleData.id || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h3 className=\"text-xl font-semibold mb-4\">Gestión Económica</h3>\n\n      <EconomicReportSummary\n        reportPeriod={reportPeriod}\n        selectedDate={selectedDate}\n        selectedMonth={selectedMonth}\n        selectedWeek={selectedWeek}\n        setSelectedDate={setSelectedDate}\n        setSelectedMonth={setSelectedMonth}\n        setReportPeriod={setReportPeriod}\n        totalIncomePeriod={totalIncomePeriod}\n        totalExpensesPeriod={totalExpensesPeriod}\n        netProfitPeriod={netProfitPeriod}\n      />\n\n      <AnimalProfitabilitySection\n        animalProfitability={animalProfitability}\n        totalSharedExpenses={totalSharedExpenses}\n        sharedExpensesBreakdown={sharedExpensesBreakdown}\n      />\n\n      <TransactionForm\n        transaction={transaction}\n        handleInputChange={(e) => setTransaction({ ...transaction, [e.target.name]: e.target.value })}\n        handleSubmit={handleSubmit}\n        handleGenerateInvoice={handleGenerateInvoice}\n        animals={safeAnimals}\n        calculateTotalSale={calculateTotalSale} // Pass calculateTotalSale to TransactionForm\n        suppliers={suppliers}\n        clients={clients}\n        addSupplier={addSupplier}\n        addClient={addClient}\n        debts={debts}\n        credits={credits}\n        addDebt={addDebt}\n        payDebt={payDebt}\n        addCredit={addCredit}\n        collectCredit={collectCredit}\n      />\n\n      <TransactionHistory\n        transactions={transactions}\n        onDeleteTransaction={onDeleteTransaction}\n        handleGenerateInvoice={handleGenerateInvoice}\n      />\n\n      <SupplierClientManagement\n        suppliers={suppliers}\n        clients={clients}\n        debts={debts}\n        credits={credits}\n        addSupplier={addSupplier}\n        addClient={addClient}\n        addDebt={addDebt}\n        payDebt={payDebt}\n        addCredit={addCredit}\n        collectCredit={collectCredit}\n      />\n    </div>\n  );\n};\n\nexport default EconomicManagementPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}