{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\project (10)\\\\src\\\\components\\\\EconomicManagementPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport EconomicReportSummary from './EconomicManagement/EconomicReportSummary';\nimport AnimalProfitabilitySection from './EconomicManagement/AnimalProfitabilitySection';\nimport TransactionForm from './EconomicManagement/TransactionForm';\nimport TransactionHistory from './EconomicManagement/TransactionHistory';\nimport ProfitabilityCharts from './EconomicManagement/ProfitabilityCharts';\nimport SupplierClientManagement from './EconomicManagement/SupplierClientManagement'; // Nuevo componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EconomicManagementPage = ({\n  transactions,\n  onAddTransaction,\n  onDeleteTransaction,\n  animals,\n  employees,\n  payslips,\n  thirdPartyPayments,\n  currentUser,\n  logoUrl\n}) => {\n  _s();\n  const [transaction, setTransaction] = useState({\n    type: 'ingreso',\n    category: '',\n    amount: '',\n    description: '',\n    animalId: '',\n    product: '',\n    quantity: '',\n    unit: '',\n    pricePerUnit: '',\n    client: '',\n    date: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: ''\n  });\n  const [reportPeriod, setReportPeriod] = useState('monthly');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7));\n  const [selectedWeek, setSelectedWeek] = useState(getWeekNumber(new Date()));\n  const [sharedExpensesBreakdown, setSharedExpensesBreakdown] = useState({});\n\n  // Estados para proveedores y clientes\n  const [suppliers, setSuppliers] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [debts, setDebts] = useState([]); // Deudas a proveedores\n  const [credits, setCredits] = useState([]); // Créditos de clientes\n\n  const sharedExpenseCategories = ['alimento', 'desparasitante', 'vitaminas', 'vacunas'];\n\n  // --- Funciones para Proveedores y Clientes ---\n  const addSupplier = supplier => {\n    setSuppliers([...suppliers, {\n      ...supplier,\n      id: `SUP-${Date.now()}`\n    }]);\n  };\n  const addClient = client => {\n    setClients([...clients, {\n      ...client,\n      id: `CLI-${Date.now()}`\n    }]);\n  };\n  const addDebt = debt => {\n    setDebts([...debts, {\n      ...debt,\n      id: `DEBT-${Date.now()}`\n    }]);\n  };\n  const payDebt = id => {\n    setDebts(debts.map(debt => debt.id === id ? {\n      ...debt,\n      paid: true,\n      paymentDate: new Date().toISOString().split('T')[0]\n    } : debt));\n  };\n  const addCredit = credit => {\n    setCredits([...credits, {\n      ...credit,\n      id: `CRED-${Date.now()}`\n    }]);\n  };\n  const collectCredit = id => {\n    setCredits(credits.map(credit => credit.id === id ? {\n      ...credit,\n      collected: true,\n      collectionDate: new Date().toISOString().split('T')[0]\n    } : credit));\n  };\n\n  // --- Lógica de Filtrado de Reportes ---\n  const filterItemsBySelectedPeriod = (items, dateProp) => {\n    return items.filter(item => {\n      const itemDate = normalizeDate(item[dateProp]);\n      if (reportPeriod === 'daily') {\n        const selectedDay = normalizeDate(selectedDate);\n        return itemDate.getTime() === selectedDay.getTime();\n      } else if (reportPeriod === 'weekly') {\n        const {\n          start,\n          end\n        } = getStartAndEndOfWeek(selectedWeek.year, selectedWeek.week);\n        return itemDate >= start && itemDate <= end;\n      } else if (reportPeriod === 'monthly') {\n        const [year, month] = selectedMonth.split('-').map(Number);\n        return itemDate.getFullYear() === year && itemDate.getMonth() === month - 1;\n      }\n      return false;\n    });\n  };\n  const currentPeriodTransactions = filterItemsBySelectedPeriod(transactions, 'date');\n  const currentPeriodPayslips = filterItemsBySelectedPeriod(payslips, 'paymentDate');\n  const currentPeriodThirdPartyPayments = filterItemsBySelectedPeriod(thirdPartyPayments, 'date');\n  const totalIncomePeriod = currentPeriodTransactions.filter(t => t.type === 'ingreso' || t.type === 'venta').reduce((sum, t) => sum + t.total, 0);\n  const transactionExpensesPeriod = currentPeriodTransactions.filter(t => t.type === 'gasto' || t.type === 'compra').reduce((sum, t) => sum + t.total, 0);\n  const payslipExpensesPeriod = currentPeriodPayslips.reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n  const thirdPartyExpensesPeriod = currentPeriodThirdPartyPayments.reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  const totalExpensesPeriod = transactionExpensesPeriod + payslipExpensesPeriod + thirdPartyExpensesPeriod;\n  const netProfitPeriod = totalIncomePeriod - totalExpensesPeriod;\n\n  // --- Lógica de Rentabilidad por Animal ---\n  const safeEmployees = employees || [];\n  const safeAnimals = animals || [];\n  const safeThirdPartyPayments = thirdPartyPayments || [];\n\n  // Costo de mano de obra (salarios)\n  const totalSalaries = currentPeriodPayslips.reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n  const proratedLaborCostPerAnimal = safeAnimals.length > 0 ? totalSalaries / safeAnimals.length : 0;\n\n  // Costos compartidos (alimento, desparasitante, vitaminas, vacunas)\n  const totalSharedExpenses = currentPeriodTransactions.filter(t => (t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())).reduce((sum, t) => sum + t.total, 0);\n  const proratedSharedExpensePerAnimal = safeAnimals.length > 0 ? totalSharedExpenses / safeAnimals.length : 0;\n\n  // Gastos de terceros (general y específico)\n  const generalThirdPartyExpenses = currentPeriodThirdPartyPayments.filter(tpp => tpp.appliesTo === 'general').reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  const proratedGeneralThirdPartyExpensePerAnimal = safeAnimals.length > 0 ? generalThirdPartyExpenses / safeAnimals.length : 0;\n  const animalProfitability = safeAnimals.map(animal => {\n    const animalIncome = currentPeriodTransactions.filter(t => t.animalId === animal.id && t.type === 'venta').reduce((sum, t) => sum + t.total, 0);\n    const animalExpenses = currentPeriodTransactions.filter(t => t.animalId === animal.id && (t.type === 'gasto' || t.type === 'compra') && !sharedExpenseCategories.includes(t.category.toLowerCase())).reduce((sum, t) => sum + t.total, 0);\n    const specificThirdPartyExpensesForAnimal = currentPeriodThirdPartyPayments.filter(tpp => tpp.appliesTo === 'specific' && tpp.targetAnimalId === animal.id).reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n    const totalCost = animalExpenses + proratedLaborCostPerAnimal + proratedSharedExpensePerAnimal + specificThirdPartyExpensesForAnimal + proratedGeneralThirdPartyExpensePerAnimal;\n    const netProfitAnimal = animalIncome - totalCost;\n    return {\n      id: animal.id,\n      name: animal.name,\n      tipoProduccion: animal.tipoProduccion,\n      status: animal.estadoReproductivo,\n      income: animalIncome,\n      expenses: animalExpenses,\n      proratedLabor: proratedLaborCostPerAnimal,\n      proratedSharedExpenses: proratedSharedExpensePerAnimal,\n      specificThirdPartyExpenses: specificThirdPartyExpensesForAnimal,\n      proratedGeneralThirdPartyExpenses: proratedGeneralThirdPartyExpensePerAnimal,\n      totalCost: totalCost,\n      netProfit: netProfitAnimal\n    };\n  });\n\n  // Efecto para calcular el desglose de gastos compartidos\n  useEffect(() => {\n    const breakdown = {};\n    sharedExpenseCategories.forEach(cat => {\n      breakdown[cat] = 0;\n    });\n    currentPeriodTransactions.forEach(t => {\n      if ((t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())) {\n        breakdown[t.category.toLowerCase()] += t.total;\n      }\n    });\n    setSharedExpensesBreakdown(breakdown);\n  }, [currentPeriodTransactions, sharedExpenseCategories]);\n\n  // Información de la finca/criador para PDFs\n  const farmName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.farmName) || 'Mi Finca Ganadera';\n  const adminName = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fullName) || 'Administrador';\n  const defaultLogo = 'https://via.placeholder.com/50x50?text=LOGO';\n  const calculateTotalSale = () => {\n    const qty = parseFloat(transaction.quantity);\n    const price = parseFloat(transaction.pricePerUnit);\n    return (qty * price).toFixed(2);\n  };\n  const handleSubmit = () => {\n    if (!transaction.date) {\n      alert('Por favor, selecciona la fecha de la transacción.');\n      return;\n    }\n    if (transaction.type === 'ingreso' && (!transaction.startDate || !transaction.endDate)) {\n      alert('Para ingresos, por favor, selecciona la fecha de inicio y fin del período.');\n      return;\n    }\n    let finalTransaction = {\n      ...transaction\n    };\n    if (transaction.type === 'venta') {\n      finalTransaction.total = parseFloat(calculateTotalSale());\n    } else {\n      finalTransaction.total = parseFloat(transaction.amount);\n    }\n    const newId = `TRX-${Date.now().toString().slice(-5)}`;\n    onAddTransaction({\n      ...finalTransaction,\n      id: newId\n    });\n    alert(`Transacción de ${finalTransaction.type} registrada por $${finalTransaction.total}.`);\n    setTransaction({\n      type: 'ingreso',\n      category: '',\n      amount: '',\n      description: '',\n      animalId: '',\n      product: '',\n      quantity: '',\n      unit: '',\n      pricePerUnit: '',\n      client: '',\n      date: new Date().toISOString().split('T')[0],\n      startDate: '',\n      endDate: ''\n    });\n  };\n  const handleGenerateInvoice = saleData => {\n    if (!saleData || !saleData.client || !saleData.product || !saleData.quantity || !saleData.pricePerUnit) {\n      alert('Por favor, completa todos los campos de la venta para generar la factura.');\n      return;\n    }\n    const precioUnitario = parseFloat(saleData.pricePerUnit || 0);\n    const cantidad = parseFloat(saleData.quantity || 0);\n    const total = cantidad * precioUnitario;\n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm';\n    tempDiv.style.padding = '15mm';\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.backgroundColor = '#f8f8f8';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n    tempDiv.innerHTML = `\n      <div style=\"border: 1px solid #ddd; border-radius: 12px; overflow: hidden; background-color: #fff; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\n        <div style=\"background-color: #2c3e50; color: #fff; padding: 20px; display: flex; justify-content: space-between; align-items: center; border-top-left-radius: 10px; border-top-right-radius: 10px;\">\n          <img src=\"${logoUrl || defaultLogo}\" style=\"width: 80px; height: 80px; border-radius: 50%; object-fit: cover;\" alt=\"Logo Finca\">\n          <div style=\"text-align: right;\">\n            <h1 style=\"margin: 0; font-size: 24pt; font-weight: bold;\">${farmName}</h1>\n            <p style=\"margin: 0; font-size: 12pt; opacity: 0.8;\">Factura de Venta</p>\n          </div>\n        </div>\n  \n        <div style=\"padding: 25px;\">\n          <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\n            <div>\n              <p style=\"margin: 0;\"><strong>Factura ID:</strong> ${saleData.id || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Fecha:</strong> ${saleData.date || 'N/A'}</p>\n            </div>\n            <div style=\"text-align: right;\">\n              <p style=\"margin: 0;\"><strong>Cliente:</strong> ${saleData.client || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Descripción:</strong> ${saleData.description || 'Venta de productos'}</p>\n            </div>\n          </div>\n  \n          <table style=\"width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 30px;\">\n            <thead style=\"background-color: #f0f0f0;\">\n              <tr>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Producto</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Cantidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Unidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Precio Unitario</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.product}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.quantity}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.unit}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${precioUnitario.toFixed(2)}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${total.toFixed(2)}</td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <div style=\"text-align: right; margin-top: 20px;\">\n            <p style=\"font-size: 14pt; font-weight: bold; color: #2c3e50; margin: 0;\">Total a Pagar: <span style=\"color: #27ae60;\">$${total.toFixed(2)}</span></p>\n          </div>\n        </div>\n  \n        <div style=\"text-align: center; padding: 20px; background-color: #f0f0f0; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"font-size: 9pt; color: #555; margin: 0;\">¡Gracias por tu compra!</p>\n        </div>\n  \n        <div style=\"text-align: right; font-size: 8pt; padding: 10px 20px; color: #aaa; background-color: #f8f8f8; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n          <p style=\"margin: 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n        </div>\n      </div>\n    `;\n    document.body.appendChild(tempDiv);\n    html2canvas(tempDiv, {\n      scale: 2,\n      useCORS: true\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const pageHeight = 297;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      let heightLeft = imgHeight;\n      let position = 0;\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n      while (heightLeft >= 0) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n      pdf.save(`factura_${saleData.client || 'sin_cliente'}_${saleData.id || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Gesti\\xF3n Econ\\xF3mica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EconomicReportSummary, {\n      reportPeriod: reportPeriod,\n      selectedDate: selectedDate,\n      selectedMonth: selectedMonth,\n      selectedWeek: selectedWeek,\n      setSelectedDate: setSelectedDate,\n      setSelectedMonth: setSelectedMonth,\n      setReportPeriod: setReportPeriod,\n      totalIncomePeriod: totalIncomePeriod,\n      totalExpensesPeriod: totalExpensesPeriod,\n      netProfitPeriod: netProfitPeriod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimalProfitabilitySection, {\n      animalProfitability: animalProfitability,\n      totalSharedExpenses: totalSharedExpenses,\n      sharedExpensesBreakdown: sharedExpensesBreakdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfitabilityCharts, {\n      animalProfitability: animalProfitability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SupplierClientManagement, {\n      suppliers: suppliers,\n      clients: clients,\n      debts: debts,\n      credits: credits,\n      addSupplier: addSupplier,\n      addClient: addClient,\n      addDebt: addDebt,\n      payDebt: payDebt,\n      addCredit: addCredit,\n      collectCredit: collectCredit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      transaction: transaction,\n      handleInputChange: e => setTransaction({\n        ...transaction,\n        [e.target.name]: e.target.value\n      }),\n      handleSubmit: handleSubmit,\n      handleGenerateInvoice: handleGenerateInvoice,\n      animals: safeAnimals,\n      calculateTotalSale: calculateTotalSale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      transactions: transactions,\n      onDeleteTransaction: onDeleteTransaction,\n      handleGenerateInvoice: handleGenerateInvoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(EconomicManagementPage, \"/41XYJKb5jItQpEtkb45LTnlRVQ=\");\n_c = EconomicManagementPage;\nexport default EconomicManagementPage;\nvar _c;\n$RefreshReg$(_c, \"EconomicManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","html2canvas","EconomicReportSummary","AnimalProfitabilitySection","TransactionForm","TransactionHistory","ProfitabilityCharts","SupplierClientManagement","jsxDEV","_jsxDEV","EconomicManagementPage","transactions","onAddTransaction","onDeleteTransaction","animals","employees","payslips","thirdPartyPayments","currentUser","logoUrl","_s","transaction","setTransaction","type","category","amount","description","animalId","product","quantity","unit","pricePerUnit","client","date","Date","toISOString","split","startDate","endDate","reportPeriod","setReportPeriod","selectedDate","setSelectedDate","selectedMonth","setSelectedMonth","slice","selectedWeek","setSelectedWeek","getWeekNumber","sharedExpensesBreakdown","setSharedExpensesBreakdown","suppliers","setSuppliers","clients","setClients","debts","setDebts","credits","setCredits","sharedExpenseCategories","addSupplier","supplier","id","now","addClient","addDebt","debt","payDebt","map","paid","paymentDate","addCredit","credit","collectCredit","collected","collectionDate","filterItemsBySelectedPeriod","items","dateProp","filter","item","itemDate","normalizeDate","selectedDay","getTime","start","end","getStartAndEndOfWeek","year","week","month","Number","getFullYear","getMonth","currentPeriodTransactions","currentPeriodPayslips","currentPeriodThirdPartyPayments","totalIncomePeriod","t","reduce","sum","total","transactionExpensesPeriod","payslipExpensesPeriod","ps","parseFloat","netSalary","thirdPartyExpensesPeriod","tpp","totalExpensesPeriod","netProfitPeriod","safeEmployees","safeAnimals","safeThirdPartyPayments","totalSalaries","proratedLaborCostPerAnimal","length","totalSharedExpenses","includes","toLowerCase","proratedSharedExpensePerAnimal","generalThirdPartyExpenses","appliesTo","proratedGeneralThirdPartyExpensePerAnimal","animalProfitability","animal","animalIncome","animalExpenses","specificThirdPartyExpensesForAnimal","targetAnimalId","totalCost","netProfitAnimal","name","tipoProduccion","status","estadoReproductivo","income","expenses","proratedLabor","proratedSharedExpenses","specificThirdPartyExpenses","proratedGeneralThirdPartyExpenses","netProfit","breakdown","forEach","cat","farmName","adminName","fullName","defaultLogo","calculateTotalSale","qty","price","toFixed","handleSubmit","alert","finalTransaction","newId","toString","handleGenerateInvoice","saleData","precioUnitario","cantidad","tempDiv","document","createElement","style","width","padding","fontFamily","fontSize","backgroundColor","position","left","top","innerHTML","toLocaleDateString","body","appendChild","scale","useCORS","then","canvas","imgData","toDataURL","pdf","imgWidth","pageHeight","imgHeight","height","heightLeft","addImage","addPage","save","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/project (10)/src/components/EconomicManagementPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport EconomicReportSummary from './EconomicManagement/EconomicReportSummary';\nimport AnimalProfitabilitySection from './EconomicManagement/AnimalProfitabilitySection';\nimport TransactionForm from './EconomicManagement/TransactionForm';\nimport TransactionHistory from './EconomicManagement/TransactionHistory';\nimport ProfitabilityCharts from './EconomicManagement/ProfitabilityCharts';\nimport SupplierClientManagement from './EconomicManagement/SupplierClientManagement'; // Nuevo componente\n\nconst EconomicManagementPage = ({ transactions, onAddTransaction, onDeleteTransaction, animals, employees, payslips, thirdPartyPayments, currentUser, logoUrl }) => {\n  const [transaction, setTransaction] = useState({\n    type: 'ingreso',\n    category: '',\n    amount: '',\n    description: '',\n    animalId: '',\n    product: '',\n    quantity: '',\n    unit: '',\n    pricePerUnit: '',\n    client: '',\n    date: new Date().toISOString().split('T')[0],\n    startDate: '',\n    endDate: '',\n  });\n  const [reportPeriod, setReportPeriod] = useState('monthly');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7));\n  const [selectedWeek, setSelectedWeek] = useState(getWeekNumber(new Date()));\n  const [sharedExpensesBreakdown, setSharedExpensesBreakdown] = useState({});\n\n  // Estados para proveedores y clientes\n  const [suppliers, setSuppliers] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [debts, setDebts] = useState([]); // Deudas a proveedores\n  const [credits, setCredits] = useState([]); // Créditos de clientes\n\n  const sharedExpenseCategories = ['alimento', 'desparasitante', 'vitaminas', 'vacunas'];\n\n  // --- Funciones para Proveedores y Clientes ---\n  const addSupplier = (supplier) => {\n    setSuppliers([...suppliers, { ...supplier, id: `SUP-${Date.now()}` }]);\n  };\n\n  const addClient = (client) => {\n    setClients([...clients, { ...client, id: `CLI-${Date.now()}` }]);\n  };\n\n  const addDebt = (debt) => {\n    setDebts([...debts, { ...debt, id: `DEBT-${Date.now()}` }]);\n  };\n\n  const payDebt = (id) => {\n    setDebts(debts.map(debt => debt.id === id ? { ...debt, paid: true, paymentDate: new Date().toISOString().split('T')[0] } : debt));\n  };\n\n  const addCredit = (credit) => {\n    setCredits([...credits, { ...credit, id: `CRED-${Date.now()}` }]);\n  };\n\n  const collectCredit = (id) => {\n    setCredits(credits.map(credit => credit.id === id ? { ...credit, collected: true, collectionDate: new Date().toISOString().split('T')[0] } : credit));\n  };\n\n  // --- Lógica de Filtrado de Reportes ---\n  const filterItemsBySelectedPeriod = (items, dateProp) => {\n    return items.filter(item => {\n      const itemDate = normalizeDate(item[dateProp]);\n\n      if (reportPeriod === 'daily') {\n        const selectedDay = normalizeDate(selectedDate);\n        return itemDate.getTime() === selectedDay.getTime();\n      } else if (reportPeriod === 'weekly') {\n        const { start, end } = getStartAndEndOfWeek(selectedWeek.year, selectedWeek.week);\n        return itemDate >= start && itemDate <= end;\n      } else if (reportPeriod === 'monthly') {\n        const [year, month] = selectedMonth.split('-').map(Number);\n        return itemDate.getFullYear() === year && itemDate.getMonth() === (month - 1);\n      }\n      return false;\n    });\n  };\n\n  const currentPeriodTransactions = filterItemsBySelectedPeriod(transactions, 'date');\n  const currentPeriodPayslips = filterItemsBySelectedPeriod(payslips, 'paymentDate');\n  const currentPeriodThirdPartyPayments = filterItemsBySelectedPeriod(thirdPartyPayments, 'date');\n  \n  const totalIncomePeriod = currentPeriodTransactions\n    .filter(t => t.type === 'ingreso' || t.type === 'venta')\n    .reduce((sum, t) => sum + t.total, 0);\n  \n  const transactionExpensesPeriod = currentPeriodTransactions\n    .filter(t => t.type === 'gasto' || t.type === 'compra')\n    .reduce((sum, t) => sum + t.total, 0);\n  \n  const payslipExpensesPeriod = currentPeriodPayslips\n    .reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n\n  const thirdPartyExpensesPeriod = currentPeriodThirdPartyPayments\n    .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  \n  const totalExpensesPeriod = transactionExpensesPeriod + payslipExpensesPeriod + thirdPartyExpensesPeriod;\n\n  const netProfitPeriod = totalIncomePeriod - totalExpensesPeriod;\n\n  // --- Lógica de Rentabilidad por Animal ---\n  const safeEmployees = employees || [];\n  const safeAnimals = animals || [];\n  const safeThirdPartyPayments = thirdPartyPayments || [];\n\n  // Costo de mano de obra (salarios)\n  const totalSalaries = currentPeriodPayslips.reduce((sum, ps) => sum + (parseFloat(ps.netSalary) || 0), 0);\n  const proratedLaborCostPerAnimal = safeAnimals.length > 0 ? totalSalaries / safeAnimals.length : 0;\n\n  // Costos compartidos (alimento, desparasitante, vitaminas, vacunas)\n  const totalSharedExpenses = currentPeriodTransactions\n    .filter(t => \n      (t.type === 'gasto' || t.type === 'compra') && \n      sharedExpenseCategories.includes(t.category.toLowerCase())\n    )\n    .reduce((sum, t) => sum + t.total, 0);\n\n  const proratedSharedExpensePerAnimal = safeAnimals.length > 0 ? totalSharedExpenses / safeAnimals.length : 0;\n\n  // Gastos de terceros (general y específico)\n  const generalThirdPartyExpenses = currentPeriodThirdPartyPayments\n    .filter(tpp => tpp.appliesTo === 'general')\n    .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n  \n  const proratedGeneralThirdPartyExpensePerAnimal = safeAnimals.length > 0 ? generalThirdPartyExpenses / safeAnimals.length : 0;\n\n\n  const animalProfitability = safeAnimals.map(animal => {\n    const animalIncome = currentPeriodTransactions\n      .filter(t => t.animalId === animal.id && t.type === 'venta')\n      .reduce((sum, t) => sum + t.total, 0);\n\n    const animalExpenses = currentPeriodTransactions\n      .filter(t => t.animalId === animal.id && (t.type === 'gasto' || t.type === 'compra') && !sharedExpenseCategories.includes(t.category.toLowerCase()))\n      .reduce((sum, t) => sum + t.total, 0);\n\n    const specificThirdPartyExpensesForAnimal = currentPeriodThirdPartyPayments\n      .filter(tpp => tpp.appliesTo === 'specific' && tpp.targetAnimalId === animal.id)\n      .reduce((sum, tpp) => sum + (parseFloat(tpp.amount) || 0), 0);\n\n    const totalCost = animalExpenses + proratedLaborCostPerAnimal + proratedSharedExpensePerAnimal + specificThirdPartyExpensesForAnimal + proratedGeneralThirdPartyExpensePerAnimal;\n    const netProfitAnimal = animalIncome - totalCost;\n\n    return {\n      id: animal.id,\n      name: animal.name,\n      tipoProduccion: animal.tipoProduccion,\n      status: animal.estadoReproductivo,\n      income: animalIncome,\n      expenses: animalExpenses,\n      proratedLabor: proratedLaborCostPerAnimal,\n      proratedSharedExpenses: proratedSharedExpensePerAnimal,\n      specificThirdPartyExpenses: specificThirdPartyExpensesForAnimal,\n      proratedGeneralThirdPartyExpenses: proratedGeneralThirdPartyExpensePerAnimal,\n      totalCost: totalCost,\n      netProfit: netProfitAnimal,\n    };\n  });\n\n  // Efecto para calcular el desglose de gastos compartidos\n  useEffect(() => {\n    const breakdown = {};\n    sharedExpenseCategories.forEach(cat => {\n      breakdown[cat] = 0;\n    });\n\n    currentPeriodTransactions.forEach(t => {\n      if ((t.type === 'gasto' || t.type === 'compra') && sharedExpenseCategories.includes(t.category.toLowerCase())) {\n        breakdown[t.category.toLowerCase()] += t.total;\n      }\n    });\n    setSharedExpensesBreakdown(breakdown);\n  }, [currentPeriodTransactions, sharedExpenseCategories]);\n\n  // Información de la finca/criador para PDFs\n  const farmName = currentUser?.farmName || 'Mi Finca Ganadera';\n  const adminName = currentUser?.fullName || 'Administrador';\n  const defaultLogo = 'https://via.placeholder.com/50x50?text=LOGO';\n\n  const calculateTotalSale = () => {\n    const qty = parseFloat(transaction.quantity);\n    const price = parseFloat(transaction.pricePerUnit);\n    return (qty * price).toFixed(2);\n  };\n\n  const handleSubmit = () => {\n    if (!transaction.date) {\n      alert('Por favor, selecciona la fecha de la transacción.');\n      return;\n    }\n    if (transaction.type === 'ingreso' && (!transaction.startDate || !transaction.endDate)) {\n      alert('Para ingresos, por favor, selecciona la fecha de inicio y fin del período.');\n      return;\n    }\n\n    let finalTransaction = { ...transaction };\n    if (transaction.type === 'venta') {\n      finalTransaction.total = parseFloat(calculateTotalSale()); \n    } else {\n      finalTransaction.total = parseFloat(transaction.amount);\n    }\n    \n    const newId = `TRX-${Date.now().toString().slice(-5)}`;\n    onAddTransaction({ ...finalTransaction, id: newId });\n    alert(`Transacción de ${finalTransaction.type} registrada por $${finalTransaction.total}.`);\n    setTransaction({\n      type: 'ingreso', category: '', amount: '', description: '',\n      animalId: '', product: '', quantity: '', unit: '', pricePerUnit: '', client: '',\n      date: new Date().toISOString().split('T')[0],\n      startDate: '', endDate: '',\n    });\n  };\n\n  const handleGenerateInvoice = (saleData) => {\n    if (!saleData || !saleData.client || !saleData.product || !saleData.quantity || !saleData.pricePerUnit) {\n      alert('Por favor, completa todos los campos de la venta para generar la factura.');\n      return;\n    }\n  \n    const precioUnitario = parseFloat(saleData.pricePerUnit || 0);\n    const cantidad = parseFloat(saleData.quantity || 0);\n    const total = cantidad * precioUnitario;\n  \n    const tempDiv = document.createElement('div');\n    tempDiv.style.width = '210mm';\n    tempDiv.style.padding = '15mm';\n    tempDiv.style.fontFamily = 'Arial, sans-serif';\n    tempDiv.style.fontSize = '10pt';\n    tempDiv.style.backgroundColor = '#f8f8f8';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.left = '-9999px';\n    tempDiv.style.top = '-9999px';\n  \n    tempDiv.innerHTML = `\n      <div style=\"border: 1px solid #ddd; border-radius: 12px; overflow: hidden; background-color: #fff; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\n        <div style=\"background-color: #2c3e50; color: #fff; padding: 20px; display: flex; justify-content: space-between; align-items: center; border-top-left-radius: 10px; border-top-right-radius: 10px;\">\n          <img src=\"${logoUrl || defaultLogo}\" style=\"width: 80px; height: 80px; border-radius: 50%; object-fit: cover;\" alt=\"Logo Finca\">\n          <div style=\"text-align: right;\">\n            <h1 style=\"margin: 0; font-size: 24pt; font-weight: bold;\">${farmName}</h1>\n            <p style=\"margin: 0; font-size: 12pt; opacity: 0.8;\">Factura de Venta</p>\n          </div>\n        </div>\n  \n        <div style=\"padding: 25px;\">\n          <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\n            <div>\n              <p style=\"margin: 0;\"><strong>Factura ID:</strong> ${saleData.id || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Fecha:</strong> ${saleData.date || 'N/A'}</p>\n            </div>\n            <div style=\"text-align: right;\">\n              <p style=\"margin: 0;\"><strong>Cliente:</strong> ${saleData.client || 'N/A'}</p>\n              <p style=\"margin: 0;\"><strong>Descripción:</strong> ${saleData.description || 'Venta de productos'}</p>\n            </div>\n          </div>\n  \n          <table style=\"width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 30px;\">\n            <thead style=\"background-color: #f0f0f0;\">\n              <tr>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Producto</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Cantidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Unidad</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Precio Unitario</th>\n                <th style=\"padding: 12px; border: 1px solid #eee; text-align: left;\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.product}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.quantity}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">${saleData.unit}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${precioUnitario.toFixed(2)}</td>\n                <td style=\"padding: 12px; border: 1px solid #eee;\">$${total.toFixed(2)}</td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <div style=\"text-align: right; margin-top: 20px;\">\n            <p style=\"font-size: 14pt; font-weight: bold; color: #2c3e50; margin: 0;\">Total a Pagar: <span style=\"color: #27ae60;\">$${total.toFixed(2)}</span></p>\n          </div>\n        </div>\n  \n        <div style=\"text-align: center; padding: 20px; background-color: #f0f0f0; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"font-size: 9pt; color: #555; margin: 0;\">¡Gracias por tu compra!</p>\n        </div>\n  \n        <div style=\"text-align: right; font-size: 8pt; padding: 10px 20px; color: #aaa; background-color: #f8f8f8; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;\">\n          <p style=\"margin: 0;\">Generado por Campo Inteligente | Administrador: ${adminName}</p>\n          <p style=\"margin: 0;\">Fecha de Generación: ${new Date().toLocaleDateString()}</p>\n        </div>\n      </div>\n    `;\n  \n    document.body.appendChild(tempDiv);\n  \n    html2canvas(tempDiv, { scale: 2, useCORS: true }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgWidth = 210;\n      const pageHeight = 297;\n      const imgHeight = canvas.height * imgWidth / canvas.width;\n      let heightLeft = imgHeight;\n      let position = 0;\n  \n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n  \n      while (heightLeft >= 0) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n  \n      pdf.save(`factura_${saleData.client || 'sin_cliente'}_${saleData.id || 'sin_id'}.pdf`);\n      document.body.removeChild(tempDiv);\n    });\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h3 className=\"text-xl font-semibold mb-4\">Gestión Económica</h3>\n\n      <EconomicReportSummary\n        reportPeriod={reportPeriod}\n        selectedDate={selectedDate}\n        selectedMonth={selectedMonth}\n        selectedWeek={selectedWeek}\n        setSelectedDate={setSelectedDate}\n        setSelectedMonth={setSelectedMonth}\n        setReportPeriod={setReportPeriod}\n        totalIncomePeriod={totalIncomePeriod}\n        totalExpensesPeriod={totalExpensesPeriod}\n        netProfitPeriod={netProfitPeriod}\n      />\n\n      <AnimalProfitabilitySection\n        animalProfitability={animalProfitability}\n        totalSharedExpenses={totalSharedExpenses}\n        sharedExpensesBreakdown={sharedExpensesBreakdown}\n      />\n\n      <ProfitabilityCharts animalProfitability={animalProfitability} />\n\n      <SupplierClientManagement\n        suppliers={suppliers}\n        clients={clients}\n        debts={debts}\n        credits={credits}\n        addSupplier={addSupplier}\n        addClient={addClient}\n        addDebt={addDebt}\n        payDebt={payDebt}\n        addCredit={addCredit}\n        collectCredit={collectCredit}\n      />\n\n      <TransactionForm\n        transaction={transaction}\n        handleInputChange={(e) => setTransaction({ ...transaction, [e.target.name]: e.target.value })}\n        handleSubmit={handleSubmit}\n        handleGenerateInvoice={handleGenerateInvoice}\n        animals={safeAnimals}\n        calculateTotalSale={calculateTotalSale}\n      />\n\n      <TransactionHistory\n        transactions={transactions}\n        onDeleteTransaction={onDeleteTransaction}\n        handleGenerateInvoice={handleGenerateInvoice}\n      />\n    </div>\n  );\n};\n\nexport default EconomicManagementPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}