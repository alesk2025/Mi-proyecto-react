{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\project (10)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AuthLayout from './components/AuthLayout';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport DashboardLayout from './components/DashboardLayout';\nimport AnimalRegistrationPage from './components/AnimalRegistrationPage';\nimport SanitaryControlPage from './components/SanitaryControlPage';\nimport ReproductiveControlPage from './components/ReproductiveControlPage';\nimport InventoryPage from './components/InventoryPage';\nimport EconomicManagementPage from './components/EconomicManagementPage';\nimport PersonnelManagementPage from './components/PersonnelManagementPage';\nimport SubscriptionPlansPage from './components/SubscriptionPlansPage';\n\n// Importar datos simulados (ahora vacíos para que el usuario los cree)\n// Los datos iniciales se cargarán desde localStorage\nimport { animals as initialAnimals } from './mock/animals';\nimport { inventoryItems as initialInventoryItems } from './mock/inventory';\nimport { employees as initialEmployees, mockPayslips as initialPayslips } from './mock/employees';\nimport { tasks as initialTasks } from './mock/tasks';\nimport { transactions as initialTransactions } from './mock/transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUBSCRIPTION_PLANS = {\n  \"Gratuito\": {\n    maxAnimals: 10,\n    maxEmployees: 1,\n    maxInventoryItems: 15,\n    price: 0,\n    benefits: [\"Registro básico\", \"Reportes limitados\"]\n  },\n  \"Basico\": {\n    maxAnimals: 18,\n    maxEmployees: 2,\n    maxInventoryItems: 25,\n    price: 2.99,\n    benefits: [\"Todo lo gratuito\", \"Más animales y empleados\", \"Reportes detallados\"]\n  },\n  \"Standard\": {\n    maxAnimals: 28,\n    maxEmployees: 5,\n    maxInventoryItems: Infinity,\n    // Productos ilimitados\n    price: 6.99,\n    benefits: [\"Todo lo básico\", \"Más capacidad\", \"Productos ilimitados\"]\n  },\n  \"Premium\": {\n    maxAnimals: Infinity,\n    maxEmployees: Infinity,\n    maxInventoryItems: Infinity,\n    price: 24.99,\n    benefits: [\"Todo ilimitado\", \"Asesoría empresarial (simulado)\", \"Seguimiento y consultas veterinarias gratis (simulado)\"]\n  }\n};\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('login');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Función helper para cargar desde localStorage\n  const loadFromLocalStorage = (key, defaultValue) => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (error) {\n      console.error(`Error loading ${key} from localStorage:`, error);\n      return defaultValue;\n    }\n  };\n\n  // Función helper para guardar en localStorage\n  const saveToLocalStorage = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(`Error saving ${key} to localStorage:`, error);\n    }\n  };\n\n  // Estados para los datos de la aplicación, cargados desde localStorage\n  const [animals, setAnimals] = useState(() => loadFromLocalStorage('animals', initialAnimals));\n  const [inventory, setInventory] = useState(() => loadFromLocalStorage('inventory', initialInventoryItems));\n  const [reproductiveRecords, setReproductiveRecords] = useState([]);\n  const [employees, setEmployees] = useState(() => loadFromLocalStorage('employees', initialEmployees));\n  const [tasks, setTasks] = useState(() => loadFromLocalStorage('tasks', initialTasks));\n  const [transactions, setTransactions] = useState(() => loadFromLocalStorage('transactions', initialTransactions));\n  const [payslips, setPayslips] = useState(() => loadFromLocalStorage('payslips', initialPayslips));\n  const [thirdPartyPayments, setThirdPartyPayments] = useState(() => loadFromLocalStorage('thirdPartyPayments', []));\n\n  // Estado para manejar todos los usuarios registrados\n  const [registeredUsers, setRegisteredUsers] = useState(() => loadFromLocalStorage('registeredUsers', []));\n\n  // --- Efectos para guardar en localStorage cada vez que los estados cambian ---\n  useEffect(() => {\n    saveToLocalStorage('registeredUsers', registeredUsers);\n  }, [registeredUsers]);\n  useEffect(() => {\n    saveToLocalStorage('animals', animals);\n  }, [animals]);\n  useEffect(() => {\n    saveToLocalStorage('inventory', inventory);\n  }, [inventory]);\n  useEffect(() => {\n    saveToLocalStorage('employees', employees);\n  }, [employees]);\n  useEffect(() => {\n    saveToLocalStorage('tasks', tasks);\n  }, [tasks]);\n  useEffect(() => {\n    saveToLocalStorage('transactions', transactions);\n  }, [transactions]);\n  useEffect(() => {\n    saveToLocalStorage('payslips', payslips);\n  }, [payslips]);\n  useEffect(() => {\n    saveToLocalStorage('thirdPartyPayments', thirdPartyPayments);\n  }, [thirdPartyPayments]);\n  useEffect(() => {\n    saveToLocalStorage('gestacionRecords', reproductiveRecords);\n  }, [reproductiveRecords]);\n\n  // --- Funciones de Control de Límites ---\n  const checkLimit = type => {\n    if (!currentUser) return false;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return false;\n    switch (type) {\n      case 'animal':\n        return animals.length < plan.maxAnimals;\n      case 'employee':\n        return employees.length < plan.maxEmployees;\n      case 'inventoryItem':\n        return inventory.length < plan.maxInventoryItems;\n      default:\n        return false;\n    }\n  };\n  const getRemaining = type => {\n    if (!currentUser) return 0;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return 0;\n    switch (type) {\n      case 'animal':\n        return plan.maxAnimals === Infinity ? 'Ilimitado' : plan.maxAnimals - animals.length;\n      case 'employee':\n        return plan.maxEmployees === Infinity ? 'Ilimitado' : plan.maxEmployees - employees.length;\n      case 'inventoryItem':\n        return plan.maxInventoryItems === Infinity ? 'Ilimitado' : plan.maxInventoryItems - inventory.length;\n      default:\n        return 0;\n    }\n  };\n\n  // --- Funciones de Manejo de Datos ---\n\n  // Animales\n  const handleRegisterAnimal = newAnimal => {\n    if (!checkLimit('animal')) {\n      alert(`Límite de animales alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setAnimals([...animals, newAnimal]);\n  };\n  const handleUpdateAnimalProduction = (animalId, updateData) => {\n    const updatedAnimal = animals.map(animal => animal.id === animalId ? {\n      ...animal,\n      ...updateData\n    } : animal);\n    setAnimals(updatedAnimal);\n    localStorage.setItem('animals', JSON.stringify(updatedAnimals));\n  };\n  const handleReproductiveRecordStatus = (id, nuevoEstado) => {\n    const registros = JSON.parse(localStorage.getItem('gestacionRecords')) || [];\n    const actualizados = registros.map(r => r.id === id ? {\n      ...r,\n      estado: nuevoEstado\n    } : r);\n    localStorage.setItem('gestacionRecords', JSON.stringify(actualizados));\n  };\n  const handleDeletePregnantCow = id => {\n    setAnimals(prev => prev.map(animal => animal.id === id ? {\n      ...animal,\n      estadoReproductivo: '',\n      fechaUltimaGestacion: ''\n    } : animal));\n  };\n  const handleEditAnimal = updatedAnimal => {\n    setAnimals(animals.map(animal => animal.id === updatedAnimal.id ? updatedAnimal : animal));\n  };\n  const handleDeleteAnimal = id => {\n    setAnimals(animals.filter(animal => animal.id !== id));\n  };\n\n  // Inventario\n  const handleAddItemToInventory = newItem => {\n    if (!checkLimit('inventoryItem')) {\n      alert(`Límite de productos en inventario alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setInventory([...inventory, newItem]);\n  };\n  const handleUpdateInventoryQuantity = (itemId, amountUsed) => {\n    setInventory(inventory.map(item => {\n      if (item.id === itemId) {\n        const newQuantity = item.quantity - amountUsed;\n        return {\n          ...item,\n          quantity: newQuantity > 0 ? newQuantity : 0\n        };\n      }\n      return item;\n    }).filter(item => item.quantity > 0));\n  };\n  const handleDeleteInventoryItem = id => {\n    setInventory(inventory.filter(item => item.id !== id));\n  };\n  const handleExportInventory = type => {\n    alert(`Exportando inventario a ${type} (simulado).`);\n  };\n\n  // Transacciones Económicas\n  const handleAddTransaction = newTransaction => {\n    setTransactions([...transactions, newTransaction]);\n  };\n  const handleDeleteTransaction = id => {\n    setTransactions(transactions.filter(trx => trx.id !== id));\n  };\n\n  // Empleados\n  const handleAddEmployee = newEmployee => {\n    if (!checkLimit('employee')) {\n      alert(`Límite de empleados alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setEmployees([...employees, newEmployee]);\n  };\n  const handleSendPayslip = (employeeId, payslipData) => {\n    const newPayslipId = `PS-${Date.now().toString().slice(-5)}`;\n    const netSalaryNum = parseFloat(payslipData.netSalary) || 0;\n    setPayslips([...payslips, {\n      ...payslipData,\n      id: newPayslipId,\n      employeeId,\n      netSalary: netSalaryNum\n    }]);\n    alert(`Ficha de pago para ${employeeId} enviada por correo (simulado).`);\n  };\n  const handleDeletePayslip = id => {\n    setPayslips(payslips.filter(ps => ps.id !== id));\n  };\n  const handleAssignTask = (employeeId, taskData) => {\n    const newTaskId = `TASK-${Date.now().toString().slice(-5)}`;\n    setTasks([...tasks, {\n      ...taskData,\n      id: newTaskId,\n      employeeId\n    }]);\n    alert(`Tarea asignada a ${employeeId} (simulado).`);\n  };\n  const handleDeleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Pagos a terceros\n  const handleAddThirdPartyPayment = paymentData => {\n    const newPaymentId = `TPP-${Date.now().toString().slice(-5)}`;\n    const amountNum = parseFloat(paymentData.amount) || 0;\n    setThirdPartyPayments([...thirdPartyPayments, {\n      ...paymentData,\n      id: newPaymentId,\n      amount: amountNum\n    }]);\n    alert(`Pago a tercero ${paymentData.personName} registrado.`);\n  };\n  const handleDeleteThirdPartyPayment = id => {\n    setThirdPartyPayments(thirdPartyPayments.filter(payment => payment.id !== id));\n  };\n\n  // --- Funciones de Navegación y Autenticación ---\n  const handleLoginSuccess = user => {\n    setIsLoggedIn(true);\n    setCurrentUser(user);\n    setCurrentPage('dashboard');\n  };\n  const handleRegisterUser = userData => {\n    // Verificar si el email ya existe\n    if (registeredUsers.some(u => u.email === userData.email)) {\n      alert('Este correo ya está registrado. Por favor, inicia sesión o usa otro correo.');\n      return false;\n    }\n    const newUser = {\n      ...userData,\n      id: `USR-${Date.now().toString().slice(-5)}`,\n      subscriptionPlan: \"Gratuito\"\n    };\n    setRegisteredUsers([...registeredUsers, newUser]);\n    return true; // Registro exitoso\n  };\n  const handleNavigate = page => {\n    if (page === 'logout') {\n      setIsLoggedIn(false);\n      setCurrentUser(null);\n      setCurrentPage('login');\n    } else {\n      setCurrentPage(page);\n    }\n  };\n  const handleUpdateSubscription = planName => {\n    if (currentUser) {\n      const updatedUsers = registeredUsers.map(u => u.id === currentUser.id ? {\n        ...u,\n        subscriptionPlan: planName\n      } : u);\n      setRegisteredUsers(updatedUsers);\n      setCurrentUser({\n        ...currentUser,\n        subscriptionPlan: planName\n      });\n      alert(`Tu plan ha sido actualizado a ${planName}. (Simulado)`);\n      setCurrentPage('dashboard');\n    }\n  };\n\n  // --- Renderizado de Páginas ---\n  const renderPage = () => {\n    if (!isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(AuthLayout, {\n        children: currentPage === 'login' ? /*#__PURE__*/_jsxDEV(AuthLoginForm, {\n          onLoginSuccess: handleLoginSuccess,\n          onNavigateToRegister: () => setCurrentPage('register'),\n          registeredUsers: registeredUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(AuthRegisterForm, {\n          onRegisterSuccess: handleRegisterUser,\n          onNavigateToLogin: () => setCurrentPage('login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this);\n    } else {\n      let content;\n      switch (currentPage) {\n        case 'animalRegistration':\n          content = /*#__PURE__*/_jsxDEV(AnimalRegistrationPage, {\n            onRegisterAnimal: handleRegisterAnimal,\n            onUpdateAnimalProduction: handleUpdateAnimalProduction,\n            animals: animals,\n            currentUser: currentUser // Pasar currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'sanitaryControl':\n          content = /*#__PURE__*/_jsxDEV(SanitaryControlPage, {\n            inventoryItems: inventory,\n            onUpdateInventoryQuantity: handleUpdateInventoryQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'reproductiveControl':\n          content = /*#__PURE__*/_jsxDEV(ReproductiveControlPage, {\n            animals: animals,\n            onUpdateAnimalProduction: handleUpdateAnimalProduction,\n            onRegisterAnimal: handleRegisterAnimal,\n            onRegisterReproductiveEvent: event => console.log('Evento registrado:', event),\n            onDeletePregnantCow: handleDeletePregnantCow,\n            onUpdateReproductiveRecordStatus: handleReproductiveRecordStatus,\n            reproductiveRecords: reproductiveRecords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 12\n          }, this);\n          break;\n        case 'inventory':\n          content = /*#__PURE__*/_jsxDEV(InventoryPage, {\n            inventoryItems: inventory,\n            onAddItem: handleAddItemToInventory,\n            onUpdateItemQuantity: handleUpdateInventoryQuantity,\n            onExport: handleExportInventory,\n            animals: animals,\n            onDeleteAnimal: handleDeleteAnimal,\n            onEditAnimal: handleEditAnimal,\n            onDeleteInventoryItem: handleDeleteInventoryItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'economicManagement':\n          content = /*#__PURE__*/_jsxDEV(EconomicManagementPage, {\n            transactions: transactions,\n            onAddTransaction: handleAddTransaction,\n            onDeleteTransaction: handleDeleteTransaction,\n            animals: animals,\n            employees: employees,\n            payslips: payslips,\n            thirdPartyPayments: thirdPartyPayments,\n            currentUser: currentUser // Pasar currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'personnelManagement':\n          content = /*#__PURE__*/_jsxDEV(PersonnelManagementPage, {\n            employees: employees,\n            tasks: tasks,\n            onAddEmployee: handleAddEmployee,\n            onSendPayslip: handleSendPayslip,\n            onDeletePayslip: handleDeletePayslip,\n            onAssignTask: handleAssignTask,\n            onDeleteTask: handleDeleteTask,\n            thirdPartyPayments: thirdPartyPayments,\n            onAddThirdPartyPayment: handleAddThirdPartyPayment,\n            onDeleteThirdPartyPayment: handleDeleteThirdPartyPayment,\n            payslips: payslips,\n            currentUser: currentUser // Pasar currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'subscriptionPlans':\n          content = /*#__PURE__*/_jsxDEV(SubscriptionPlansPage, {\n            currentPlan: currentUser ? currentUser.subscriptionPlan : 'Gratuito',\n            onUpdateSubscription: handleUpdateSubscription,\n            plans: SUBSCRIPTION_PLANS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this);\n          break;\n        case 'dashboard':\n        default:\n          content = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold mb-4\",\n              children: [\"Bienvenido al Dashboard, \", currentUser ? currentUser.fullName : 'Usuario', \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700\",\n              children: [\"Tu plan actual es: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: currentUser ? currentUser.subscriptionPlan : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-700\",\n              children: \"Selecciona una opci\\xF3n del men\\xFA lateral para empezar a gestionar tu finca.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-blue-100 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-semibold\",\n                  children: [\"Animales (\", animals.length, \"/\", SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold\",\n                  children: [animals.length, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [\"(\", getRemaining('animal'), \" restantes)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-green-100 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-semibold\",\n                  children: [\"Productos (\", inventory.length, \"/\", SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold\",\n                  children: [inventory.length, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [\"(\", getRemaining('inventoryItem'), \" restantes)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-yellow-100 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-semibold\",\n                  children: [\"Empleados (\", employees.length, \"/\", SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold\",\n                  children: [employees.length, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [\"(\", getRemaining('employee'), \" restantes)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigate('subscriptionPlans'),\n              className: \"mt-6 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors\",\n              children: \"Ver Planes de Suscripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this);\n          break;\n      }\n      return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n        onNavigate: handleNavigate,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return renderPage();\n};\n_s(App, \"SOznphP+VX3aXeMN7GYwKwd9Q4Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AuthLayout","AuthRegisterForm","AuthLoginForm","DashboardLayout","AnimalRegistrationPage","SanitaryControlPage","ReproductiveControlPage","InventoryPage","EconomicManagementPage","PersonnelManagementPage","SubscriptionPlansPage","animals","initialAnimals","inventoryItems","initialInventoryItems","employees","initialEmployees","mockPayslips","initialPayslips","tasks","initialTasks","transactions","initialTransactions","jsxDEV","_jsxDEV","SUBSCRIPTION_PLANS","maxAnimals","maxEmployees","maxInventoryItems","price","benefits","Infinity","App","_s","currentPage","setCurrentPage","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","loadFromLocalStorage","key","defaultValue","saved","localStorage","getItem","JSON","parse","error","console","saveToLocalStorage","value","setItem","stringify","setAnimals","inventory","setInventory","reproductiveRecords","setReproductiveRecords","setEmployees","setTasks","setTransactions","payslips","setPayslips","thirdPartyPayments","setThirdPartyPayments","registeredUsers","setRegisteredUsers","checkLimit","type","plan","subscriptionPlan","length","getRemaining","handleRegisterAnimal","newAnimal","alert","handleUpdateAnimalProduction","animalId","updateData","updatedAnimal","map","animal","id","updatedAnimals","handleReproductiveRecordStatus","nuevoEstado","registros","actualizados","r","estado","handleDeletePregnantCow","prev","estadoReproductivo","fechaUltimaGestacion","handleEditAnimal","handleDeleteAnimal","filter","handleAddItemToInventory","newItem","handleUpdateInventoryQuantity","itemId","amountUsed","item","newQuantity","quantity","handleDeleteInventoryItem","handleExportInventory","handleAddTransaction","newTransaction","handleDeleteTransaction","trx","handleAddEmployee","newEmployee","handleSendPayslip","employeeId","payslipData","newPayslipId","Date","now","toString","slice","netSalaryNum","parseFloat","netSalary","handleDeletePayslip","ps","handleAssignTask","taskData","newTaskId","handleDeleteTask","task","handleAddThirdPartyPayment","paymentData","newPaymentId","amountNum","amount","personName","handleDeleteThirdPartyPayment","payment","handleLoginSuccess","user","handleRegisterUser","userData","some","u","email","newUser","handleNavigate","page","handleUpdateSubscription","planName","updatedUsers","renderPage","children","onLoginSuccess","onNavigateToRegister","fileName","_jsxFileName","lineNumber","columnNumber","onRegisterSuccess","onNavigateToLogin","content","onRegisterAnimal","onUpdateAnimalProduction","onUpdateInventoryQuantity","onRegisterReproductiveEvent","event","log","onDeletePregnantCow","onUpdateReproductiveRecordStatus","onAddItem","onUpdateItemQuantity","onExport","onDeleteAnimal","onEditAnimal","onDeleteInventoryItem","onAddTransaction","onDeleteTransaction","onAddEmployee","onSendPayslip","onDeletePayslip","onAssignTask","onDeleteTask","onAddThirdPartyPayment","onDeleteThirdPartyPayment","currentPlan","onUpdateSubscription","plans","className","fullName","onClick","onNavigate","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/project (10)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AuthLayout from './components/AuthLayout';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport DashboardLayout from './components/DashboardLayout';\nimport AnimalRegistrationPage from './components/AnimalRegistrationPage';\nimport SanitaryControlPage from './components/SanitaryControlPage';\nimport ReproductiveControlPage from './components/ReproductiveControlPage';\nimport InventoryPage from './components/InventoryPage';\nimport EconomicManagementPage from './components/EconomicManagementPage';\nimport PersonnelManagementPage from './components/PersonnelManagementPage';\nimport SubscriptionPlansPage from './components/SubscriptionPlansPage';\n\n// Importar datos simulados (ahora vacíos para que el usuario los cree)\n// Los datos iniciales se cargarán desde localStorage\nimport { animals as initialAnimals } from './mock/animals';\nimport { inventoryItems as initialInventoryItems } from './mock/inventory';\nimport { employees as initialEmployees, mockPayslips as initialPayslips } from './mock/employees';\nimport { tasks as initialTasks } from './mock/tasks';\nimport { transactions as initialTransactions } from './mock/transactions';\n\nconst SUBSCRIPTION_PLANS = {\n  \"Gratuito\": {\n    maxAnimals: 10,\n    maxEmployees: 1,\n    maxInventoryItems: 15,\n    price: 0,\n    benefits: [\"Registro básico\", \"Reportes limitados\"]\n  },\n  \"Basico\": {\n    maxAnimals: 18,\n    maxEmployees: 2,\n    maxInventoryItems: 25,\n    price: 2.99,\n    benefits: [\"Todo lo gratuito\", \"Más animales y empleados\", \"Reportes detallados\"]\n  },\n  \"Standard\": {\n    maxAnimals: 28,\n    maxEmployees: 5,\n    maxInventoryItems: Infinity, // Productos ilimitados\n    price: 6.99,\n    benefits: [\"Todo lo básico\", \"Más capacidad\", \"Productos ilimitados\"]\n  },\n  \"Premium\": {\n    maxAnimals: Infinity,\n    maxEmployees: Infinity,\n    maxInventoryItems: Infinity,\n    price: 24.99,\n    benefits: [\"Todo ilimitado\", \"Asesoría empresarial (simulado)\", \"Seguimiento y consultas veterinarias gratis (simulado)\"]\n  }\n};\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('login');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Función helper para cargar desde localStorage\n  const loadFromLocalStorage = (key, defaultValue) => {\n    try {\n      const saved = localStorage.getItem(key);\n      return saved ? JSON.parse(saved) : defaultValue;\n    } catch (error) {\n      console.error(`Error loading ${key} from localStorage:`, error);\n      return defaultValue;\n    }\n  };\n\n  // Función helper para guardar en localStorage\n  const saveToLocalStorage = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(`Error saving ${key} to localStorage:`, error);\n    }\n  };\n\n  // Estados para los datos de la aplicación, cargados desde localStorage\n  const [animals, setAnimals] = useState(() => loadFromLocalStorage('animals', initialAnimals));\n  const [inventory, setInventory] = useState(() => loadFromLocalStorage('inventory', initialInventoryItems));\n  const [reproductiveRecords, setReproductiveRecords]=useState([])\n  const [employees, setEmployees] = useState(() => loadFromLocalStorage('employees', initialEmployees));\n  const [tasks, setTasks] = useState(() => loadFromLocalStorage('tasks', initialTasks));\n  const [transactions, setTransactions] = useState(() => loadFromLocalStorage('transactions', initialTransactions));\n  const [payslips, setPayslips] = useState(() => loadFromLocalStorage('payslips', initialPayslips));\n  const [thirdPartyPayments, setThirdPartyPayments] = useState(() => loadFromLocalStorage('thirdPartyPayments', []));\n\n  // Estado para manejar todos los usuarios registrados\n  const [registeredUsers, setRegisteredUsers] = useState(() => loadFromLocalStorage('registeredUsers', []));\n\n  // --- Efectos para guardar en localStorage cada vez que los estados cambian ---\n  useEffect(() => { saveToLocalStorage('registeredUsers', registeredUsers); }, [registeredUsers]);\n  useEffect(() => { saveToLocalStorage('animals', animals); }, [animals]);\n  useEffect(() => { saveToLocalStorage('inventory', inventory); }, [inventory]);\n  useEffect(() => { saveToLocalStorage('employees', employees); }, [employees]);\n  useEffect(() => { saveToLocalStorage('tasks', tasks); }, [tasks]);\n  useEffect(() => { saveToLocalStorage('transactions', transactions); }, [transactions]);\n  useEffect(() => { saveToLocalStorage('payslips', payslips); }, [payslips]);\n  useEffect(() => { saveToLocalStorage('thirdPartyPayments', thirdPartyPayments); }, [thirdPartyPayments]);\n  useEffect(() => { saveToLocalStorage('gestacionRecords', reproductiveRecords); }, [reproductiveRecords]);\n\n\n\n  // --- Funciones de Control de Límites ---\n  const checkLimit = (type) => {\n    if (!currentUser) return false;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return false;\n\n    switch (type) {\n      case 'animal':\n        return animals.length < plan.maxAnimals;\n      case 'employee':\n        return employees.length < plan.maxEmployees;\n      case 'inventoryItem':\n        return inventory.length < plan.maxInventoryItems;\n      default:\n        return false;\n    }\n  };\n\n  const getRemaining = (type) => {\n    if (!currentUser) return 0;\n    const plan = SUBSCRIPTION_PLANS[currentUser.subscriptionPlan];\n    if (!plan) return 0;\n\n    switch (type) {\n      case 'animal':\n        return plan.maxAnimals === Infinity ? 'Ilimitado' : plan.maxAnimals - animals.length;\n      case 'employee':\n        return plan.maxEmployees === Infinity ? 'Ilimitado' : plan.maxEmployees - employees.length;\n      case 'inventoryItem':\n        return plan.maxInventoryItems === Infinity ? 'Ilimitado' : plan.maxInventoryItems - inventory.length;\n      default:\n        return 0;\n    }\n  };\n\n  // --- Funciones de Manejo de Datos ---\n\n  // Animales\n  const handleRegisterAnimal = (newAnimal) => {\n    if (!checkLimit('animal')) {\n      alert(`Límite de animales alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setAnimals([...animals, newAnimal]);\n  };\n\n  const handleUpdateAnimalProduction = (animalId, updateData) => {\n   const updatedAnimal = animals.map(animal =>\n      animal.id === animalId ? { ...animal, ...updateData } : animal\n    );\n    setAnimals(updatedAnimal);\n    localStorage.setItem('animals', JSON.stringify(updatedAnimals));\n };\n\n  const handleReproductiveRecordStatus = (id, nuevoEstado) => {\n  const registros = JSON.parse(localStorage.getItem('gestacionRecords')) || [];\n  const actualizados = registros.map(r =>\n    r.id === id ? { ...r, estado: nuevoEstado } : r\n  );\n  localStorage.setItem('gestacionRecords', JSON.stringify(actualizados));\n};\n\n\n  const handleDeletePregnantCow = (id) => {\n  setAnimals(prev =>\n    prev.map(animal =>\n      animal.id === id\n        ? { ...animal, estadoReproductivo: '', fechaUltimaGestacion: '' }\n        : animal\n       )\n     );\n   };\n\n    const handleEditAnimal = (updatedAnimal) => {\n    setAnimals(animals.map(animal =>\n      animal.id === updatedAnimal.id ? updatedAnimal : animal\n    ));\n  };\n\n  const handleDeleteAnimal = (id) => {\n    setAnimals(animals.filter(animal => animal.id !== id));\n  };\n\n  // Inventario\n  const handleAddItemToInventory = (newItem) => {\n    if (!checkLimit('inventoryItem')) {\n      alert(`Límite de productos en inventario alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setInventory([...inventory, newItem]);\n  };\n\n  const handleUpdateInventoryQuantity = (itemId, amountUsed) => {\n    setInventory(inventory.map(item => {\n      if (item.id === itemId) {\n        const newQuantity = item.quantity - amountUsed;\n        return { ...item, quantity: newQuantity > 0 ? newQuantity : 0 };\n      }\n      return item;\n    }).filter(item => item.quantity > 0));\n  };\n\n  const handleDeleteInventoryItem = (id) => {\n    setInventory(inventory.filter(item => item.id !== id));\n  };\n\n  const handleExportInventory = (type) => {\n    alert(`Exportando inventario a ${type} (simulado).`);\n  };\n\n  // Transacciones Económicas\n  const handleAddTransaction = (newTransaction) => {\n    setTransactions([...transactions, newTransaction]);\n  };\n\n  const handleDeleteTransaction = (id) => {\n    setTransactions(transactions.filter(trx => trx.id !== id));\n  };\n\n  // Empleados\n  const handleAddEmployee = (newEmployee) => {\n    if (!checkLimit('employee')) {\n      alert(`Límite de empleados alcanzado para tu plan ${currentUser.subscriptionPlan}. Actualiza tu suscripción.`);\n      return;\n    }\n    setEmployees([...employees, newEmployee]);\n  };\n\n  const handleSendPayslip = (employeeId, payslipData) => {\n    const newPayslipId = `PS-${Date.now().toString().slice(-5)}`;\n    const netSalaryNum = parseFloat(payslipData.netSalary) || 0;\n    setPayslips([...payslips, { ...payslipData, id: newPayslipId, employeeId, netSalary: netSalaryNum }]);\n    alert(`Ficha de pago para ${employeeId} enviada por correo (simulado).`);\n  };\n\n  const handleDeletePayslip = (id) => {\n    setPayslips(payslips.filter(ps => ps.id !== id));\n  };\n\n  const handleAssignTask = (employeeId, taskData) => {\n    const newTaskId = `TASK-${Date.now().toString().slice(-5)}`;\n    setTasks([...tasks, { ...taskData, id: newTaskId, employeeId }]);\n    alert(`Tarea asignada a ${employeeId} (simulado).`);\n  };\n\n  const handleDeleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Pagos a terceros\n  const handleAddThirdPartyPayment = (paymentData) => {\n    const newPaymentId = `TPP-${Date.now().toString().slice(-5)}`;\n    const amountNum = parseFloat(paymentData.amount) || 0;\n    setThirdPartyPayments([...thirdPartyPayments, { ...paymentData, id: newPaymentId, amount: amountNum }]);\n    alert(`Pago a tercero ${paymentData.personName} registrado.`);\n  };\n\n  const handleDeleteThirdPartyPayment = (id) => {\n    setThirdPartyPayments(thirdPartyPayments.filter(payment => payment.id !== id));\n  };\n\n  // --- Funciones de Navegación y Autenticación ---\n  const handleLoginSuccess = (user) => {\n    setIsLoggedIn(true);\n    setCurrentUser(user);\n    setCurrentPage('dashboard');\n  };\n\n  const handleRegisterUser = (userData) => {\n    // Verificar si el email ya existe\n    if (registeredUsers.some(u => u.email === userData.email)) {\n      alert('Este correo ya está registrado. Por favor, inicia sesión o usa otro correo.');\n      return false;\n    }\n    const newUser = { ...userData, id: `USR-${Date.now().toString().slice(-5)}`, subscriptionPlan: \"Gratuito\" };\n    setRegisteredUsers([...registeredUsers, newUser]);\n    return true; // Registro exitoso\n  };\n\n  const handleNavigate = (page) => {\n    if (page === 'logout') {\n      setIsLoggedIn(false);\n      setCurrentUser(null);\n      setCurrentPage('login');\n    } else {\n      setCurrentPage(page);\n    }\n  };\n\n  const handleUpdateSubscription = (planName) => {\n    if (currentUser) {\n      const updatedUsers = registeredUsers.map(u =>\n        u.id === currentUser.id ? { ...u, subscriptionPlan: planName } : u\n      );\n      setRegisteredUsers(updatedUsers);\n      setCurrentUser({ ...currentUser, subscriptionPlan: planName });\n      alert(`Tu plan ha sido actualizado a ${planName}. (Simulado)`);\n      setCurrentPage('dashboard');\n    }\n  };\n\n  // --- Renderizado de Páginas ---\n  const renderPage = () => {\n    if (!isLoggedIn) {\n      return (\n        <AuthLayout>\n          {currentPage === 'login' ? (\n            <AuthLoginForm onLoginSuccess={handleLoginSuccess} onNavigateToRegister={() => setCurrentPage('register')} registeredUsers={registeredUsers} />\n          ) : (\n            <AuthRegisterForm onRegisterSuccess={handleRegisterUser} onNavigateToLogin={() => setCurrentPage('login')} />\n          )}\n        </AuthLayout>\n      );\n    } else {\n      let content;\n      switch (currentPage) {\n        case 'animalRegistration':\n          content = (\n            <AnimalRegistrationPage\n              onRegisterAnimal={handleRegisterAnimal}\n              onUpdateAnimalProduction={handleUpdateAnimalProduction}\n              animals={animals}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'sanitaryControl':\n          content = (\n            <SanitaryControlPage\n              inventoryItems={inventory}\n              onUpdateInventoryQuantity={handleUpdateInventoryQuantity}\n            />\n          );\n          break;\n       case 'reproductiveControl':\n         content = (\n           <ReproductiveControlPage\n             animals={animals}\n             onUpdateAnimalProduction={handleUpdateAnimalProduction}\n             onRegisterAnimal={handleRegisterAnimal}\n             onRegisterReproductiveEvent={(event) => console.log('Evento registrado:', event)}\n             onDeletePregnantCow={handleDeletePregnantCow}\n             onUpdateReproductiveRecordStatus={handleReproductiveRecordStatus}\n             reproductiveRecords={reproductiveRecords}\n             \n           />\n         );\n         break;\n        case 'inventory':\n          content = (\n            <InventoryPage\n              inventoryItems={inventory}\n              onAddItem={handleAddItemToInventory}\n              onUpdateItemQuantity={handleUpdateInventoryQuantity}\n              onExport={handleExportInventory}\n              animals={animals}\n              onDeleteAnimal={handleDeleteAnimal}\n              onEditAnimal={handleEditAnimal}\n              onDeleteInventoryItem={handleDeleteInventoryItem}\n            />\n          );\n          break;\n        case 'economicManagement':\n          content = (\n            <EconomicManagementPage\n              transactions={transactions}\n              onAddTransaction={handleAddTransaction}\n              onDeleteTransaction={handleDeleteTransaction}\n              animals={animals}\n              employees={employees}\n              payslips={payslips}\n              thirdPartyPayments={thirdPartyPayments}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'personnelManagement':\n          content = (\n            <PersonnelManagementPage\n              employees={employees}\n              tasks={tasks}\n              onAddEmployee={handleAddEmployee}\n              onSendPayslip={handleSendPayslip}\n              onDeletePayslip={handleDeletePayslip}\n              onAssignTask={handleAssignTask}\n              onDeleteTask={handleDeleteTask}\n              thirdPartyPayments={thirdPartyPayments}\n              onAddThirdPartyPayment={handleAddThirdPartyPayment}\n              onDeleteThirdPartyPayment={handleDeleteThirdPartyPayment}\n              payslips={payslips}\n              currentUser={currentUser} // Pasar currentUser\n            />\n          );\n          break;\n        case 'subscriptionPlans':\n          content = (\n            <SubscriptionPlansPage\n              currentPlan={currentUser ? currentUser.subscriptionPlan : 'Gratuito'}\n              onUpdateSubscription={handleUpdateSubscription}\n              plans={SUBSCRIPTION_PLANS}\n            />\n          );\n          break;\n        case 'dashboard':\n        default:\n          content = (\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\n              <h3 className=\"text-xl font-semibold mb-4\">Bienvenido al Dashboard, {currentUser ? currentUser.fullName : 'Usuario'}!</h3>\n              <p className=\"text-gray-700\">Tu plan actual es: <span className=\"font-bold\">{currentUser ? currentUser.subscriptionPlan : 'N/A'}</span></p>\n              <p className=\"text-700\">Selecciona una opción del menú lateral para empezar a gestionar tu finca.</p>\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-blue-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Animales ({animals.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxAnimals})</h4>\n                  <p className=\"text-2xl font-bold\">{animals.length} <span className=\"text-sm text-gray-600\">({getRemaining('animal')} restantes)</span></p>\n                </div>\n                <div className=\"p-4 bg-green-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Productos ({inventory.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxInventoryItems})</h4>\n                  <p className=\"text-2xl font-bold\">{inventory.length} <span className=\"text-sm text-gray-600\">({getRemaining('inventoryItem')} restantes)</span></p>\n                </div>\n                <div className=\"p-4 bg-yellow-100 rounded-lg\">\n                  <h4 className=\"font-semibold\">Empleados ({employees.length}/{SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees === Infinity ? '∞' : SUBSCRIPTION_PLANS[currentUser.subscriptionPlan].maxEmployees})</h4>\n                  <p className=\"text-2xl font-bold\">{employees.length} <span className=\"text-sm text-gray-600\">({getRemaining('employee')} restantes)</span></p>\n                </div>\n              </div>\n              <button\n                onClick={() => handleNavigate('subscriptionPlans')}\n                className=\"mt-6 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors\"\n              >\n                Ver Planes de Suscripción\n              </button>\n            </div>\n          );\n          break;\n      }\n      return <DashboardLayout onNavigate={handleNavigate}>{content}</DashboardLayout>;\n    }\n  };\n\n  return renderPage();\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}